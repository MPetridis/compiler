State 172 conflicts: 6 shift/reduce


Grammar

    0 $accept: program "eof"

    1 program: global_declarations main_function

    2 global_declarations: global_declarations global_declaration
    3                    | ε

    4 global_declaration: typedef_declaration
    5                   | class_declaration
    6                   | enum_declaration
    7                   | global_var_declaration
    8                   | func_declaration

    9 typedef_declaration: "typedef" typename "id" dims ";"
   10                    | error typename "id" dims ";"
   11                    | "typedef" typename error dims ";"
   12                    | "typedef" typename "id" dims error

   13 typename: standard_type
   14         | "id"

   15 standard_type: "char"
   16              | "int"
   17              | "float"
   18              | "void"

   19 dims: dims dim
   20     | ε

   21 dim: "[" "int const" "]"
   22    | error "int const" "]"
   23    | "[" "int const" error
   24    | "[" "]"
   25    | error "]"
   26    | "[" error

   27 class_declaration: "class" "id" class_body ";"
   28                  | error "id" class_body ";"
   29                  | "class" error class_body ";"
   30                  | "class" "id" class_body error

   31 class_body: parent "{" members_methods "}"
   32           | parent error members_methods "}"
   33           | parent "{" members_methods error

   34 parent: ":" "id"
   35       | ε

   36 members_methods: members_methods access member_or_method
   37                | access member_or_method

   38 access: "private" ":"
   39       | "protected" ":"
   40       | "public" ":"
   41       | ε

   42 member_or_method: member
   43                 | method

   44 member: var_declaration

   45 var_declaration: typename variabledefs ";"

   46 variabledefs: variabledefs "," variabledef
   47             | variabledef

   48 variabledef: "id" dims

   49 method: short_func_declaration

   50 short_func_declaration: short_par_func_header ";"
   51                       | short_par_func_header error
   52                       | nopar_func_header ";"
   53                       | nopar_func_header error

   54 short_par_func_header: func_header_start "(" parameter_type_list ")"

   55 func_header_start: typename "id"

   56 parameter_type_list: parameter_type_list "," typename pass_dims
   57                    | typename pass_dims

   58 pass_dims: dims
   59          | "&"

   60 nopar_func_header: func_header_start "(" ")"

   61 enum_declaration: "enum" "id" enum_body ";"

   62 enum_body: "{" id_list "}"

   63 id_list: id_list "," "id" initializer
   64        | "id" initializer

   65 global_var_declaration: typename init_variabledefs ";"

   66 init_variabledefs: init_variabledefs "," init_variabledef
   67                  | init_variabledef

   68 init_variabledef: variabledef initializer

   69 initializer: "=" init_value
   70            | ε

   71 init_value: sign constant
   72           | sign "id"
   73           | "{" init_values "}"
   74           | error init_values "}"
   75           | "{" init_values error
   76           | "string"

   77 sign: "+ -"
   78     | ε

   79 constant: "char const"
   80         | "int const"
   81         | "double const"

   82 init_values: init_values "," init_value
   83            | init_value

   84 func_declaration: short_func_declaration
   85                 | full_func_declaration

   86 full_func_declaration: full_par_func_header "{" decl_statements "}"
   87                      | nopar_class_func_header "{" decl_statements "}"
   88                      | nopar_func_header "{" decl_statements "}"

   89 full_par_func_header: class_func_header_start "(" parameter_list ")"
   90                     | func_header_start "(" parameter_list ")"

   91 class_func_header_start: typename func_class "id"

   92 func_class: "id" "::"

   93 parameter_list: parameter_list "," typename pass_variabledef
   94               | typename pass_variabledef

   95 pass_variabledef: variabledef
   96                 | "&" "id"

   97 nopar_class_func_header: class_func_header_start "(" ")"

   98 decl_statements: declarations statements
   99                | declarations
  100                | statements
  101                | ε

  102 declarations: declarations decltype typename variabledefs ";"
  103             | decltype typename variabledefs ";"

  104 decltype: "static"
  105         | ε

  106 statements: statements statement
  107           | statement

  108 statement: expression_statement
  109          | if_statement
  110          | while_statement
  111          | for_statement
  112          | switch_statement
  113          | return_statement
  114          | io_statement
  115          | comp_statement
  116          | "continue" ";"
  117          | "break" ";"
  118          | ";"

  119 expression_statement: general_expression ";"

  120 general_expression: general_expression "," general_expression
  121                   | assignment

  122 assignment: variable "=" assignment
  123           | variable "=" "string"
  124           | expression

  125 variable: variable "[" general_expression "]"
  126         | variable "." "id"
  127         | decltype "id"
  128         | "this"

  129 expression: expression "||" expression
  130           | expression "&&" expression
  131           | expression "== !=" expression
  132           | expression "< >= < <=" expression
  133           | expression "+ -" expression
  134           | expression "* / %" expression
  135           | "!" expression
  136           | "+ -" expression
  137           | "SIZEOF" expression
  138           | "++ --" variable
  139           | variable "++ --"
  140           | variable
  141           | variable "(" expression_list ")"
  142           | "length" "(" general_expression ")"
  143           | constant
  144           | "(" general_expression ")"
  145           | "(" standard_type ")"

  146 expression_list: general_expression
  147                | ε

  148 if_statement: "if" "(" general_expression ")" statement if_tail

  149 if_tail: "else" statement
  150        | ε

  151 while_statement: "while" "(" general_expression ")" statement

  152 for_statement: "for" "(" optexpr ";" optexpr ";" optexpr ")" statement

  153 optexpr: general_expression
  154        | ε

  155 switch_statement: "switch" "(" general_expression ")" switch_tail

  156 switch_tail: "{" decl_cases "}"
  157            | single_casestatement

  158 decl_cases: declarations casestatements
  159           | declarations
  160           | casestatements
  161           | ε

  162 casestatements: casestatements casestatement
  163               | casestatement

  164 casestatement: "case" constant ":" casestatement
  165              | "case" constant ":" statements
  166              | "default" ":" statements

  167 single_casestatement: "case" constant ":" single_casestatement
  168                     | "case" constant ":" statement

  169 return_statement: "return" optexpr ";"

  170 io_statement: "cin" ">>" in_list ";"
  171             | "cout" "<<" out_list ";"

  172 in_list: in_list ">>" in_item
  173        | in_item

  174 in_item: variable

  175 out_list: out_list "<<" out_item
  176         | out_item

  177 out_item: general_expression
  178         | "string"

  179 comp_statement: "{" decl_statements "}"

  180 main_function: main_header "{" decl_statements "}"

  181 main_header: "int" "main" "(" ")"


Terminals, with rules where they appear

    "eof" (0) 0
    error (256) 10 11 12 22 23 25 26 28 29 30 32 33 51 53 74 75
    "typedef" (258) 9 11 12
    "char" (259) 15
    "int" (260) 16 181
    "float" (261) 17
    "enum" (262) 61
    "class" (263) 27 29 30
    "private" (264) 38
    "protected" (265) 39
    "public" (266) 40
    "void" (267) 18
    "static" (268) 104
    "continue" (269) 116
    "break" (270) 117
    "this" (271) 128
    "if" (272) 148
    "else" (273) 149
    "while" (274) 151
    "for" (275) 152
    "switch" (276) 155
    "case" (277) 164 165 167 168
    "default" (278) 166
    "return" (279) 169
    "cin" (280) 170
    "cout" (281) 171
    "length" (282) 142
    "main" (283) 181
    "id" <strval> (284) 9 10 12 14 27 28 30 34 48 55 61 63 64 72 91 92 96 126 127
    "int const" <intval> (285) 21 22 23 80
    "double const" <doubleval> (286) 81
    "char const" <charval> (287) 79
    "||" (288) 129
    "&&" (289) 130
    "== !=" (290) 131
    "< >= < <=" (291) 132
    "+ -" (292) 77 133 136
    "* / %" (293) 134
    "!" (294) 135
    "++ --" (295) 138 139
    "SIZEOF" (296) 137
    "string" (297) 76 123 178
    "(" (298) 54 60 89 90 97 141 142 144 145 148 151 152 155 181
    ")" (299) 54 60 89 90 97 141 142 144 145 148 151 152 155 181
    ";" (300) 9 10 11 27 28 29 45 50 52 61 65 102 103 116 117 118 119 152 169 170 171
    "." (301) 126
    "," (302) 46 56 63 66 82 93 120
    "=" (303) 69 122 123
    ":" (304) 34 38 39 40 164 165 166 167 168
    "[" (305) 21 23 24 26 125
    "]" (306) 21 22 24 25 125
    "&" (307) 59 96
    "{" (308) 31 33 62 73 75 86 87 88 156 179 180
    "}" (309) 31 32 62 73 74 86 87 88 156 179 180
    "::" (310) 92
    ">>" (311) 170 172
    "<<" (312) 171 175
    LOWER_THAN_ELSE (313)


Nonterminals, with rules where they appear

    $accept (59)
        on left: 0
    program (60)
        on left: 1
        on right: 0
    global_declarations (61)
        on left: 2 3
        on right: 1 2
    global_declaration (62)
        on left: 4 5 6 7 8
        on right: 2
    typedef_declaration (63)
        on left: 9 10 11 12
        on right: 4
    typename (64)
        on left: 13 14
        on right: 9 10 11 12 45 55 56 57 65 91 93 94 102 103
    standard_type (65)
        on left: 15 16 17 18
        on right: 13 145
    dims (66)
        on left: 19 20
        on right: 9 10 11 12 19 48 58
    dim (67)
        on left: 21 22 23 24 25 26
        on right: 19
    class_declaration (68)
        on left: 27 28 29 30
        on right: 5
    class_body (69)
        on left: 31 32 33
        on right: 27 28 29 30
    parent (70)
        on left: 34 35
        on right: 31 32 33
    members_methods (71)
        on left: 36 37
        on right: 31 32 33 36
    access (72)
        on left: 38 39 40 41
        on right: 36 37
    member_or_method (73)
        on left: 42 43
        on right: 36 37
    member (74)
        on left: 44
        on right: 42
    var_declaration (75)
        on left: 45
        on right: 44
    variabledefs (76)
        on left: 46 47
        on right: 45 46 102 103
    variabledef (77)
        on left: 48
        on right: 46 47 68 95
    method (78)
        on left: 49
        on right: 43
    short_func_declaration (79)
        on left: 50 51 52 53
        on right: 49 84
    short_par_func_header (80)
        on left: 54
        on right: 50 51
    func_header_start (81)
        on left: 55
        on right: 54 60 90
    parameter_type_list (82)
        on left: 56 57
        on right: 54 56
    pass_dims (83)
        on left: 58 59
        on right: 56 57
    nopar_func_header (84)
        on left: 60
        on right: 52 53 88
    enum_declaration (85)
        on left: 61
        on right: 6
    enum_body (86)
        on left: 62
        on right: 61
    id_list (87)
        on left: 63 64
        on right: 62 63
    global_var_declaration (88)
        on left: 65
        on right: 7
    init_variabledefs (89)
        on left: 66 67
        on right: 65 66
    init_variabledef (90)
        on left: 68
        on right: 66 67
    initializer (91)
        on left: 69 70
        on right: 63 64 68
    init_value (92)
        on left: 71 72 73 74 75 76
        on right: 69 82 83
    sign (93)
        on left: 77 78
        on right: 71 72
    constant (94)
        on left: 79 80 81
        on right: 71 143 164 165 167 168
    init_values (95)
        on left: 82 83
        on right: 73 74 75 82
    func_declaration (96)
        on left: 84 85
        on right: 8
    full_func_declaration (97)
        on left: 86 87 88
        on right: 85
    full_par_func_header (98)
        on left: 89 90
        on right: 86
    class_func_header_start (99)
        on left: 91
        on right: 89 97
    func_class (100)
        on left: 92
        on right: 91
    parameter_list (101)
        on left: 93 94
        on right: 89 90 93
    pass_variabledef (102)
        on left: 95 96
        on right: 93 94
    nopar_class_func_header (103)
        on left: 97
        on right: 87
    decl_statements (104)
        on left: 98 99 100 101
        on right: 86 87 88 179 180
    declarations (105)
        on left: 102 103
        on right: 98 99 102 158 159
    decltype (106)
        on left: 104 105
        on right: 102 103 127
    statements (107)
        on left: 106 107
        on right: 98 100 106 165 166
    statement (108)
        on left: 108 109 110 111 112 113 114 115 116 117 118
        on right: 106 107 148 149 151 152 168
    expression_statement (109)
        on left: 119
        on right: 108
    general_expression (110)
        on left: 120 121
        on right: 119 120 125 142 144 146 148 151 153 155 177
    assignment (111)
        on left: 122 123 124
        on right: 121 122
    variable (112)
        on left: 125 126 127 128
        on right: 122 123 125 126 138 139 140 141 174
    expression (113)
        on left: 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145
        on right: 124 129 130 131 132 133 134 135 136 137
    expression_list (114)
        on left: 146 147
        on right: 141
    if_statement (115)
        on left: 148
        on right: 109
    if_tail (116)
        on left: 149 150
        on right: 148
    while_statement (117)
        on left: 151
        on right: 110
    for_statement (118)
        on left: 152
        on right: 111
    optexpr (119)
        on left: 153 154
        on right: 152 169
    switch_statement (120)
        on left: 155
        on right: 112
    switch_tail (121)
        on left: 156 157
        on right: 155
    decl_cases (122)
        on left: 158 159 160 161
        on right: 156
    casestatements (123)
        on left: 162 163
        on right: 158 160 162
    casestatement (124)
        on left: 164 165 166
        on right: 162 163 164
    single_casestatement (125)
        on left: 167 168
        on right: 157 167
    return_statement (126)
        on left: 169
        on right: 113
    io_statement (127)
        on left: 170 171
        on right: 114
    in_list (128)
        on left: 172 173
        on right: 170 172
    in_item (129)
        on left: 174
        on right: 172 173
    out_list (130)
        on left: 175 176
        on right: 171 175
    out_item (131)
        on left: 177 178
        on right: 175 176
    comp_statement (132)
        on left: 179
        on right: 115
    main_function (133)
        on left: 180
        on right: 1
    main_header (134)
        on left: 181
        on right: 180


State 0

    0 $accept: • program "eof"

    $default  reduce using rule 3 (global_declarations)

    program              go to state 1
    global_declarations  go to state 2


State 1

    0 $accept: program • "eof"

    "eof"  shift, and go to state 3


State 2

    1 program: global_declarations • main_function
    2 global_declarations: global_declarations • global_declaration

    error      shift, and go to state 4
    "typedef"  shift, and go to state 5
    "char"     shift, and go to state 6
    "int"      shift, and go to state 7
    "float"    shift, and go to state 8
    "enum"     shift, and go to state 9
    "class"    shift, and go to state 10
    "void"     shift, and go to state 11
    "id"       shift, and go to state 12

    global_declaration       go to state 13
    typedef_declaration      go to state 14
    typename                 go to state 15
    standard_type            go to state 16
    class_declaration        go to state 17
    short_func_declaration   go to state 18
    short_par_func_header    go to state 19
    func_header_start        go to state 20
    nopar_func_header        go to state 21
    enum_declaration         go to state 22
    global_var_declaration   go to state 23
    func_declaration         go to state 24
    full_func_declaration    go to state 25
    full_par_func_header     go to state 26
    class_func_header_start  go to state 27
    nopar_class_func_header  go to state 28
    main_function            go to state 29
    main_header              go to state 30


State 3

    0 $accept: program "eof" •

    $default  accept


State 4

   10 typedef_declaration: error • typename "id" dims ";"
   28 class_declaration: error • "id" class_body ";"

    "char"   shift, and go to state 6
    "int"    shift, and go to state 31
    "float"  shift, and go to state 8
    "void"   shift, and go to state 11
    "id"     shift, and go to state 32

    typename       go to state 33
    standard_type  go to state 16


State 5

    9 typedef_declaration: "typedef" • typename "id" dims ";"
   11                    | "typedef" • typename error dims ";"
   12                    | "typedef" • typename "id" dims error

    "char"   shift, and go to state 6
    "int"    shift, and go to state 31
    "float"  shift, and go to state 8
    "void"   shift, and go to state 11
    "id"     shift, and go to state 12

    typename       go to state 34
    standard_type  go to state 16


State 6

   15 standard_type: "char" •

    $default  reduce using rule 15 (standard_type)


State 7

   16 standard_type: "int" •
  181 main_header: "int" • "main" "(" ")"

    "main"  shift, and go to state 35

    $default  reduce using rule 16 (standard_type)


State 8

   17 standard_type: "float" •

    $default  reduce using rule 17 (standard_type)


State 9

   61 enum_declaration: "enum" • "id" enum_body ";"

    "id"  shift, and go to state 36


State 10

   27 class_declaration: "class" • "id" class_body ";"
   29                  | "class" • error class_body ";"
   30                  | "class" • "id" class_body error

    error  shift, and go to state 37
    "id"   shift, and go to state 38


State 11

   18 standard_type: "void" •

    $default  reduce using rule 18 (standard_type)


State 12

   14 typename: "id" •

    $default  reduce using rule 14 (typename)


State 13

    2 global_declarations: global_declarations global_declaration •

    $default  reduce using rule 2 (global_declarations)


State 14

    4 global_declaration: typedef_declaration •

    $default  reduce using rule 4 (global_declaration)


State 15

   55 func_header_start: typename • "id"
   65 global_var_declaration: typename • init_variabledefs ";"
   91 class_func_header_start: typename • func_class "id"

    "id"  shift, and go to state 39

    variabledef        go to state 40
    init_variabledefs  go to state 41
    init_variabledef   go to state 42
    func_class         go to state 43


State 16

   13 typename: standard_type •

    $default  reduce using rule 13 (typename)


State 17

    5 global_declaration: class_declaration •

    $default  reduce using rule 5 (global_declaration)


State 18

   84 func_declaration: short_func_declaration •

    $default  reduce using rule 84 (func_declaration)


State 19

   50 short_func_declaration: short_par_func_header • ";"
   51                       | short_par_func_header • error

    error  shift, and go to state 44
    ";"    shift, and go to state 45


State 20

   54 short_par_func_header: func_header_start • "(" parameter_type_list ")"
   60 nopar_func_header: func_header_start • "(" ")"
   90 full_par_func_header: func_header_start • "(" parameter_list ")"

    "("  shift, and go to state 46


State 21

   52 short_func_declaration: nopar_func_header • ";"
   53                       | nopar_func_header • error
   88 full_func_declaration: nopar_func_header • "{" decl_statements "}"

    error  shift, and go to state 47
    ";"    shift, and go to state 48
    "{"    shift, and go to state 49


State 22

    6 global_declaration: enum_declaration •

    $default  reduce using rule 6 (global_declaration)


State 23

    7 global_declaration: global_var_declaration •

    $default  reduce using rule 7 (global_declaration)


State 24

    8 global_declaration: func_declaration •

    $default  reduce using rule 8 (global_declaration)


State 25

   85 func_declaration: full_func_declaration •

    $default  reduce using rule 85 (func_declaration)


State 26

   86 full_func_declaration: full_par_func_header • "{" decl_statements "}"

    "{"  shift, and go to state 50


State 27

   89 full_par_func_header: class_func_header_start • "(" parameter_list ")"
   97 nopar_class_func_header: class_func_header_start • "(" ")"

    "("  shift, and go to state 51


State 28

   87 full_func_declaration: nopar_class_func_header • "{" decl_statements "}"

    "{"  shift, and go to state 52


State 29

    1 program: global_declarations main_function •

    $default  reduce using rule 1 (program)


State 30

  180 main_function: main_header • "{" decl_statements "}"

    "{"  shift, and go to state 53


State 31

   16 standard_type: "int" •

    $default  reduce using rule 16 (standard_type)


State 32

   14 typename: "id" •
   28 class_declaration: error "id" • class_body ";"

    ":"  shift, and go to state 54

    "id"      reduce using rule 14 (typename)
    $default  reduce using rule 35 (parent)

    class_body  go to state 55
    parent      go to state 56


State 33

   10 typedef_declaration: error typename • "id" dims ";"

    "id"  shift, and go to state 57


State 34

    9 typedef_declaration: "typedef" typename • "id" dims ";"
   11                    | "typedef" typename • error dims ";"
   12                    | "typedef" typename • "id" dims error

    error  shift, and go to state 58
    "id"   shift, and go to state 59


State 35

  181 main_header: "int" "main" • "(" ")"

    "("  shift, and go to state 60


State 36

   61 enum_declaration: "enum" "id" • enum_body ";"

    "{"  shift, and go to state 61

    enum_body  go to state 62


State 37

   29 class_declaration: "class" error • class_body ";"

    ":"  shift, and go to state 54

    $default  reduce using rule 35 (parent)

    class_body  go to state 63
    parent      go to state 56


State 38

   27 class_declaration: "class" "id" • class_body ";"
   30                  | "class" "id" • class_body error

    ":"  shift, and go to state 54

    $default  reduce using rule 35 (parent)

    class_body  go to state 64
    parent      go to state 56


State 39

   48 variabledef: "id" • dims
   55 func_header_start: typename "id" •
   92 func_class: "id" • "::"

    "::"  shift, and go to state 65

    "("       reduce using rule 55 (func_header_start)
    $default  reduce using rule 20 (dims)

    dims  go to state 66


State 40

   68 init_variabledef: variabledef • initializer

    "="  shift, and go to state 67

    $default  reduce using rule 70 (initializer)

    initializer  go to state 68


State 41

   65 global_var_declaration: typename init_variabledefs • ";"
   66 init_variabledefs: init_variabledefs • "," init_variabledef

    ";"  shift, and go to state 69
    ","  shift, and go to state 70


State 42

   67 init_variabledefs: init_variabledef •

    $default  reduce using rule 67 (init_variabledefs)


State 43

   91 class_func_header_start: typename func_class • "id"

    "id"  shift, and go to state 71


State 44

   51 short_func_declaration: short_par_func_header error •

    $default  reduce using rule 51 (short_func_declaration)


State 45

   50 short_func_declaration: short_par_func_header ";" •

    $default  reduce using rule 50 (short_func_declaration)


State 46

   54 short_par_func_header: func_header_start "(" • parameter_type_list ")"
   60 nopar_func_header: func_header_start "(" • ")"
   90 full_par_func_header: func_header_start "(" • parameter_list ")"

    "char"   shift, and go to state 6
    "int"    shift, and go to state 31
    "float"  shift, and go to state 8
    "void"   shift, and go to state 11
    "id"     shift, and go to state 12
    ")"      shift, and go to state 72

    typename             go to state 73
    standard_type        go to state 16
    parameter_type_list  go to state 74
    parameter_list       go to state 75


State 47

   53 short_func_declaration: nopar_func_header error •

    $default  reduce using rule 53 (short_func_declaration)


State 48

   52 short_func_declaration: nopar_func_header ";" •

    $default  reduce using rule 52 (short_func_declaration)


State 49

   88 full_func_declaration: nopar_func_header "{" • decl_statements "}"

    "static"        shift, and go to state 76
    "continue"      shift, and go to state 77
    "break"         shift, and go to state 78
    "this"          shift, and go to state 79
    "if"            shift, and go to state 80
    "while"         shift, and go to state 81
    "for"           shift, and go to state 82
    "switch"        shift, and go to state 83
    "return"        shift, and go to state 84
    "cin"           shift, and go to state 85
    "cout"          shift, and go to state 86
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95
    ";"             shift, and go to state 96
    "{"             shift, and go to state 97

    "}"       reduce using rule 101 (decl_statements)
    $default  reduce using rule 105 (decltype)

    constant              go to state 98
    decl_statements       go to state 99
    declarations          go to state 100
    decltype              go to state 101
    statements            go to state 102
    statement             go to state 103
    expression_statement  go to state 104
    general_expression    go to state 105
    assignment            go to state 106
    variable              go to state 107
    expression            go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 50

   86 full_func_declaration: full_par_func_header "{" • decl_statements "}"

    "static"        shift, and go to state 76
    "continue"      shift, and go to state 77
    "break"         shift, and go to state 78
    "this"          shift, and go to state 79
    "if"            shift, and go to state 80
    "while"         shift, and go to state 81
    "for"           shift, and go to state 82
    "switch"        shift, and go to state 83
    "return"        shift, and go to state 84
    "cin"           shift, and go to state 85
    "cout"          shift, and go to state 86
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95
    ";"             shift, and go to state 96
    "{"             shift, and go to state 97

    "}"       reduce using rule 101 (decl_statements)
    $default  reduce using rule 105 (decltype)

    constant              go to state 98
    decl_statements       go to state 116
    declarations          go to state 100
    decltype              go to state 101
    statements            go to state 102
    statement             go to state 103
    expression_statement  go to state 104
    general_expression    go to state 105
    assignment            go to state 106
    variable              go to state 107
    expression            go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 51

   89 full_par_func_header: class_func_header_start "(" • parameter_list ")"
   97 nopar_class_func_header: class_func_header_start "(" • ")"

    "char"   shift, and go to state 6
    "int"    shift, and go to state 31
    "float"  shift, and go to state 8
    "void"   shift, and go to state 11
    "id"     shift, and go to state 12
    ")"      shift, and go to state 117

    typename        go to state 118
    standard_type   go to state 16
    parameter_list  go to state 119


State 52

   87 full_func_declaration: nopar_class_func_header "{" • decl_statements "}"

    "static"        shift, and go to state 76
    "continue"      shift, and go to state 77
    "break"         shift, and go to state 78
    "this"          shift, and go to state 79
    "if"            shift, and go to state 80
    "while"         shift, and go to state 81
    "for"           shift, and go to state 82
    "switch"        shift, and go to state 83
    "return"        shift, and go to state 84
    "cin"           shift, and go to state 85
    "cout"          shift, and go to state 86
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95
    ";"             shift, and go to state 96
    "{"             shift, and go to state 97

    "}"       reduce using rule 101 (decl_statements)
    $default  reduce using rule 105 (decltype)

    constant              go to state 98
    decl_statements       go to state 120
    declarations          go to state 100
    decltype              go to state 101
    statements            go to state 102
    statement             go to state 103
    expression_statement  go to state 104
    general_expression    go to state 105
    assignment            go to state 106
    variable              go to state 107
    expression            go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 53

  180 main_function: main_header "{" • decl_statements "}"

    "static"        shift, and go to state 76
    "continue"      shift, and go to state 77
    "break"         shift, and go to state 78
    "this"          shift, and go to state 79
    "if"            shift, and go to state 80
    "while"         shift, and go to state 81
    "for"           shift, and go to state 82
    "switch"        shift, and go to state 83
    "return"        shift, and go to state 84
    "cin"           shift, and go to state 85
    "cout"          shift, and go to state 86
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95
    ";"             shift, and go to state 96
    "{"             shift, and go to state 97

    "}"       reduce using rule 101 (decl_statements)
    $default  reduce using rule 105 (decltype)

    constant              go to state 98
    decl_statements       go to state 121
    declarations          go to state 100
    decltype              go to state 101
    statements            go to state 102
    statement             go to state 103
    expression_statement  go to state 104
    general_expression    go to state 105
    assignment            go to state 106
    variable              go to state 107
    expression            go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 54

   34 parent: ":" • "id"

    "id"  shift, and go to state 122


State 55

   28 class_declaration: error "id" class_body • ";"

    ";"  shift, and go to state 123


State 56

   31 class_body: parent • "{" members_methods "}"
   32           | parent • error members_methods "}"
   33           | parent • "{" members_methods error

    error  shift, and go to state 124
    "{"    shift, and go to state 125


State 57

   10 typedef_declaration: error typename "id" • dims ";"

    $default  reduce using rule 20 (dims)

    dims  go to state 126


State 58

   11 typedef_declaration: "typedef" typename error • dims ";"

    $default  reduce using rule 20 (dims)

    dims  go to state 127


State 59

    9 typedef_declaration: "typedef" typename "id" • dims ";"
   12                    | "typedef" typename "id" • dims error

    $default  reduce using rule 20 (dims)

    dims  go to state 128


State 60

  181 main_header: "int" "main" "(" • ")"

    ")"  shift, and go to state 129


State 61

   62 enum_body: "{" • id_list "}"

    "id"  shift, and go to state 130

    id_list  go to state 131


State 62

   61 enum_declaration: "enum" "id" enum_body • ";"

    ";"  shift, and go to state 132


State 63

   29 class_declaration: "class" error class_body • ";"

    ";"  shift, and go to state 133


State 64

   27 class_declaration: "class" "id" class_body • ";"
   30                  | "class" "id" class_body • error

    error  shift, and go to state 134
    ";"    shift, and go to state 135


State 65

   92 func_class: "id" "::" •

    $default  reduce using rule 92 (func_class)


State 66

   19 dims: dims • dim
   48 variabledef: "id" dims •

    error  shift, and go to state 136
    "["    shift, and go to state 137

    ")"  reduce using rule 48 (variabledef)
    ";"  reduce using rule 48 (variabledef)
    ","  reduce using rule 48 (variabledef)
    "="  reduce using rule 48 (variabledef)

    dim  go to state 138


State 67

   69 initializer: "=" • init_value

    error     shift, and go to state 139
    "+ -"     shift, and go to state 140
    "string"  shift, and go to state 141
    "{"       shift, and go to state 142

    "id"            reduce using rule 78 (sign)
    "int const"     reduce using rule 78 (sign)
    "double const"  reduce using rule 78 (sign)
    "char const"    reduce using rule 78 (sign)

    init_value  go to state 143
    sign        go to state 144


State 68

   68 init_variabledef: variabledef initializer •

    $default  reduce using rule 68 (init_variabledef)


State 69

   65 global_var_declaration: typename init_variabledefs ";" •

    $default  reduce using rule 65 (global_var_declaration)


State 70

   66 init_variabledefs: init_variabledefs "," • init_variabledef

    "id"  shift, and go to state 145

    variabledef       go to state 40
    init_variabledef  go to state 146


State 71

   91 class_func_header_start: typename func_class "id" •

    $default  reduce using rule 91 (class_func_header_start)


State 72

   60 nopar_func_header: func_header_start "(" ")" •

    $default  reduce using rule 60 (nopar_func_header)


State 73

   57 parameter_type_list: typename • pass_dims
   94 parameter_list: typename • pass_variabledef

    "id"  shift, and go to state 145
    "&"   shift, and go to state 147

    $default  reduce using rule 20 (dims)

    dims              go to state 148
    variabledef       go to state 149
    pass_dims         go to state 150
    pass_variabledef  go to state 151


State 74

   54 short_par_func_header: func_header_start "(" parameter_type_list • ")"
   56 parameter_type_list: parameter_type_list • "," typename pass_dims

    ")"  shift, and go to state 152
    ","  shift, and go to state 153


State 75

   90 full_par_func_header: func_header_start "(" parameter_list • ")"
   93 parameter_list: parameter_list • "," typename pass_variabledef

    ")"  shift, and go to state 154
    ","  shift, and go to state 155


State 76

  104 decltype: "static" •

    $default  reduce using rule 104 (decltype)


State 77

  116 statement: "continue" • ";"

    ";"  shift, and go to state 156


State 78

  117 statement: "break" • ";"

    ";"  shift, and go to state 157


State 79

  128 variable: "this" •

    $default  reduce using rule 128 (variable)


State 80

  148 if_statement: "if" • "(" general_expression ")" statement if_tail

    "("  shift, and go to state 158


State 81

  151 while_statement: "while" • "(" general_expression ")" statement

    "("  shift, and go to state 159


State 82

  152 for_statement: "for" • "(" optexpr ";" optexpr ";" optexpr ")" statement

    "("  shift, and go to state 160


State 83

  155 switch_statement: "switch" • "(" general_expression ")" switch_tail

    "("  shift, and go to state 161


State 84

  169 return_statement: "return" • optexpr ";"

    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95

    ";"       reduce using rule 154 (optexpr)
    $default  reduce using rule 105 (decltype)

    constant            go to state 98
    decltype            go to state 162
    general_expression  go to state 163
    assignment          go to state 106
    variable            go to state 107
    expression          go to state 108
    optexpr             go to state 164


State 85

  170 io_statement: "cin" • ">>" in_list ";"

    ">>"  shift, and go to state 165


State 86

  171 io_statement: "cout" • "<<" out_list ";"

    "<<"  shift, and go to state 166


State 87

  142 expression: "length" • "(" general_expression ")"

    "("  shift, and go to state 167


State 88

   80 constant: "int const" •

    $default  reduce using rule 80 (constant)


State 89

   81 constant: "double const" •

    $default  reduce using rule 81 (constant)


State 90

   79 constant: "char const" •

    $default  reduce using rule 79 (constant)


State 91

  136 expression: "+ -" • expression

    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95

    $default  reduce using rule 105 (decltype)

    constant    go to state 98
    decltype    go to state 162
    variable    go to state 168
    expression  go to state 169


State 92

  135 expression: "!" • expression

    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95

    $default  reduce using rule 105 (decltype)

    constant    go to state 98
    decltype    go to state 162
    variable    go to state 168
    expression  go to state 170


State 93

  138 expression: "++ --" • variable

    "static"  shift, and go to state 76
    "this"    shift, and go to state 79

    $default  reduce using rule 105 (decltype)

    decltype  go to state 162
    variable  go to state 171


State 94

  137 expression: "SIZEOF" • expression

    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95

    $default  reduce using rule 105 (decltype)

    constant    go to state 98
    decltype    go to state 162
    variable    go to state 168
    expression  go to state 172


State 95

  144 expression: "(" • general_expression ")"
  145           | "(" • standard_type ")"

    "char"          shift, and go to state 6
    "int"           shift, and go to state 31
    "float"         shift, and go to state 8
    "void"          shift, and go to state 11
    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95

    $default  reduce using rule 105 (decltype)

    standard_type       go to state 173
    constant            go to state 98
    decltype            go to state 162
    general_expression  go to state 174
    assignment          go to state 106
    variable            go to state 107
    expression          go to state 108


State 96

  118 statement: ";" •

    $default  reduce using rule 118 (statement)


State 97

  179 comp_statement: "{" • decl_statements "}"

    "static"        shift, and go to state 76
    "continue"      shift, and go to state 77
    "break"         shift, and go to state 78
    "this"          shift, and go to state 79
    "if"            shift, and go to state 80
    "while"         shift, and go to state 81
    "for"           shift, and go to state 82
    "switch"        shift, and go to state 83
    "return"        shift, and go to state 84
    "cin"           shift, and go to state 85
    "cout"          shift, and go to state 86
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95
    ";"             shift, and go to state 96
    "{"             shift, and go to state 97

    "}"       reduce using rule 101 (decl_statements)
    $default  reduce using rule 105 (decltype)

    constant              go to state 98
    decl_statements       go to state 175
    declarations          go to state 100
    decltype              go to state 101
    statements            go to state 102
    statement             go to state 103
    expression_statement  go to state 104
    general_expression    go to state 105
    assignment            go to state 106
    variable              go to state 107
    expression            go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 98

  143 expression: constant •

    $default  reduce using rule 143 (expression)


State 99

   88 full_func_declaration: nopar_func_header "{" decl_statements • "}"

    "}"  shift, and go to state 176


State 100

   98 decl_statements: declarations • statements
   99                | declarations •
  102 declarations: declarations • decltype typename variabledefs ";"

    "static"        shift, and go to state 76
    "continue"      shift, and go to state 77
    "break"         shift, and go to state 78
    "this"          shift, and go to state 79
    "if"            shift, and go to state 80
    "while"         shift, and go to state 81
    "for"           shift, and go to state 82
    "switch"        shift, and go to state 83
    "return"        shift, and go to state 84
    "cin"           shift, and go to state 85
    "cout"          shift, and go to state 86
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95
    ";"             shift, and go to state 96
    "{"             shift, and go to state 97

    "}"       reduce using rule 99 (decl_statements)
    $default  reduce using rule 105 (decltype)

    constant              go to state 98
    decltype              go to state 177
    statements            go to state 178
    statement             go to state 103
    expression_statement  go to state 104
    general_expression    go to state 105
    assignment            go to state 106
    variable              go to state 107
    expression            go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 101

  103 declarations: decltype • typename variabledefs ";"
  127 variable: decltype • "id"

    "char"   shift, and go to state 6
    "int"    shift, and go to state 31
    "float"  shift, and go to state 8
    "void"   shift, and go to state 11
    "id"     shift, and go to state 179

    typename       go to state 180
    standard_type  go to state 16


State 102

  100 decl_statements: statements •
  106 statements: statements • statement

    "static"        shift, and go to state 76
    "continue"      shift, and go to state 77
    "break"         shift, and go to state 78
    "this"          shift, and go to state 79
    "if"            shift, and go to state 80
    "while"         shift, and go to state 81
    "for"           shift, and go to state 82
    "switch"        shift, and go to state 83
    "return"        shift, and go to state 84
    "cin"           shift, and go to state 85
    "cout"          shift, and go to state 86
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95
    ";"             shift, and go to state 96
    "{"             shift, and go to state 97

    "id"      reduce using rule 105 (decltype)
    $default  reduce using rule 100 (decl_statements)

    constant              go to state 98
    decltype              go to state 162
    statement             go to state 181
    expression_statement  go to state 104
    general_expression    go to state 105
    assignment            go to state 106
    variable              go to state 107
    expression            go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 103

  107 statements: statement •

    $default  reduce using rule 107 (statements)


State 104

  108 statement: expression_statement •

    $default  reduce using rule 108 (statement)


State 105

  119 expression_statement: general_expression • ";"
  120 general_expression: general_expression • "," general_expression

    ";"  shift, and go to state 182
    ","  shift, and go to state 183


State 106

  121 general_expression: assignment •

    $default  reduce using rule 121 (general_expression)


State 107

  122 assignment: variable • "=" assignment
  123           | variable • "=" "string"
  125 variable: variable • "[" general_expression "]"
  126         | variable • "." "id"
  139 expression: variable • "++ --"
  140           | variable •
  141           | variable • "(" expression_list ")"

    "++ --"  shift, and go to state 184
    "("      shift, and go to state 185
    "."      shift, and go to state 186
    "="      shift, and go to state 187
    "["      shift, and go to state 188

    $default  reduce using rule 140 (expression)


State 108

  124 assignment: expression •
  129 expression: expression • "||" expression
  130           | expression • "&&" expression
  131           | expression • "== !=" expression
  132           | expression • "< >= < <=" expression
  133           | expression • "+ -" expression
  134           | expression • "* / %" expression

    "||"         shift, and go to state 189
    "&&"         shift, and go to state 190
    "== !="      shift, and go to state 191
    "< >= < <="  shift, and go to state 192
    "+ -"        shift, and go to state 193
    "* / %"      shift, and go to state 194

    $default  reduce using rule 124 (assignment)


State 109

  109 statement: if_statement •

    $default  reduce using rule 109 (statement)


State 110

  110 statement: while_statement •

    $default  reduce using rule 110 (statement)


State 111

  111 statement: for_statement •

    $default  reduce using rule 111 (statement)


State 112

  112 statement: switch_statement •

    $default  reduce using rule 112 (statement)


State 113

  113 statement: return_statement •

    $default  reduce using rule 113 (statement)


State 114

  114 statement: io_statement •

    $default  reduce using rule 114 (statement)


State 115

  115 statement: comp_statement •

    $default  reduce using rule 115 (statement)


State 116

   86 full_func_declaration: full_par_func_header "{" decl_statements • "}"

    "}"  shift, and go to state 195


State 117

   97 nopar_class_func_header: class_func_header_start "(" ")" •

    $default  reduce using rule 97 (nopar_class_func_header)


State 118

   94 parameter_list: typename • pass_variabledef

    "id"  shift, and go to state 145
    "&"   shift, and go to state 196

    variabledef       go to state 149
    pass_variabledef  go to state 151


State 119

   89 full_par_func_header: class_func_header_start "(" parameter_list • ")"
   93 parameter_list: parameter_list • "," typename pass_variabledef

    ")"  shift, and go to state 197
    ","  shift, and go to state 155


State 120

   87 full_func_declaration: nopar_class_func_header "{" decl_statements • "}"

    "}"  shift, and go to state 198


State 121

  180 main_function: main_header "{" decl_statements • "}"

    "}"  shift, and go to state 199


State 122

   34 parent: ":" "id" •

    $default  reduce using rule 34 (parent)


State 123

   28 class_declaration: error "id" class_body ";" •

    $default  reduce using rule 28 (class_declaration)


State 124

   32 class_body: parent error • members_methods "}"

    "private"    shift, and go to state 200
    "protected"  shift, and go to state 201
    "public"     shift, and go to state 202

    $default  reduce using rule 41 (access)

    members_methods  go to state 203
    access           go to state 204


State 125

   31 class_body: parent "{" • members_methods "}"
   33           | parent "{" • members_methods error

    "private"    shift, and go to state 200
    "protected"  shift, and go to state 201
    "public"     shift, and go to state 202

    $default  reduce using rule 41 (access)

    members_methods  go to state 205
    access           go to state 204


State 126

   10 typedef_declaration: error typename "id" dims • ";"
   19 dims: dims • dim

    error  shift, and go to state 136
    ";"    shift, and go to state 206
    "["    shift, and go to state 137

    dim  go to state 138


State 127

   11 typedef_declaration: "typedef" typename error dims • ";"
   19 dims: dims • dim

    error  shift, and go to state 136
    ";"    shift, and go to state 207
    "["    shift, and go to state 137

    dim  go to state 138


State 128

    9 typedef_declaration: "typedef" typename "id" dims • ";"
   12                    | "typedef" typename "id" dims • error
   19 dims: dims • dim

    error  shift, and go to state 208
    ";"    shift, and go to state 209
    "["    shift, and go to state 137

    dim  go to state 138


State 129

  181 main_header: "int" "main" "(" ")" •

    $default  reduce using rule 181 (main_header)


State 130

   64 id_list: "id" • initializer

    "="  shift, and go to state 67

    $default  reduce using rule 70 (initializer)

    initializer  go to state 210


State 131

   62 enum_body: "{" id_list • "}"
   63 id_list: id_list • "," "id" initializer

    ","  shift, and go to state 211
    "}"  shift, and go to state 212


State 132

   61 enum_declaration: "enum" "id" enum_body ";" •

    $default  reduce using rule 61 (enum_declaration)


State 133

   29 class_declaration: "class" error class_body ";" •

    $default  reduce using rule 29 (class_declaration)


State 134

   30 class_declaration: "class" "id" class_body error •

    $default  reduce using rule 30 (class_declaration)


State 135

   27 class_declaration: "class" "id" class_body ";" •

    $default  reduce using rule 27 (class_declaration)


State 136

   22 dim: error • "int const" "]"
   25    | error • "]"

    "int const"  shift, and go to state 213
    "]"          shift, and go to state 214


State 137

   21 dim: "[" • "int const" "]"
   23    | "[" • "int const" error
   24    | "[" • "]"
   26    | "[" • error

    error        shift, and go to state 215
    "int const"  shift, and go to state 216
    "]"          shift, and go to state 217


State 138

   19 dims: dims dim •

    $default  reduce using rule 19 (dims)


State 139

   74 init_value: error • init_values "}"

    error     shift, and go to state 139
    "+ -"     shift, and go to state 140
    "string"  shift, and go to state 141
    "{"       shift, and go to state 142

    "id"            reduce using rule 78 (sign)
    "int const"     reduce using rule 78 (sign)
    "double const"  reduce using rule 78 (sign)
    "char const"    reduce using rule 78 (sign)

    init_value   go to state 218
    sign         go to state 144
    init_values  go to state 219


State 140

   77 sign: "+ -" •

    $default  reduce using rule 77 (sign)


State 141

   76 init_value: "string" •

    $default  reduce using rule 76 (init_value)


State 142

   73 init_value: "{" • init_values "}"
   75           | "{" • init_values error

    error     shift, and go to state 139
    "+ -"     shift, and go to state 140
    "string"  shift, and go to state 141
    "{"       shift, and go to state 142

    "id"            reduce using rule 78 (sign)
    "int const"     reduce using rule 78 (sign)
    "double const"  reduce using rule 78 (sign)
    "char const"    reduce using rule 78 (sign)

    init_value   go to state 218
    sign         go to state 144
    init_values  go to state 220


State 143

   69 initializer: "=" init_value •

    $default  reduce using rule 69 (initializer)


State 144

   71 init_value: sign • constant
   72           | sign • "id"

    "id"            shift, and go to state 221
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90

    constant  go to state 222


State 145

   48 variabledef: "id" • dims

    $default  reduce using rule 20 (dims)

    dims  go to state 66


State 146

   66 init_variabledefs: init_variabledefs "," init_variabledef •

    $default  reduce using rule 66 (init_variabledefs)


State 147

   59 pass_dims: "&" •
   96 pass_variabledef: "&" • "id"

    "id"  shift, and go to state 223

    $default  reduce using rule 59 (pass_dims)


State 148

   19 dims: dims • dim
   58 pass_dims: dims •

    error  shift, and go to state 136
    "["    shift, and go to state 137

    ")"  reduce using rule 58 (pass_dims)
    ","  reduce using rule 58 (pass_dims)

    dim  go to state 138


State 149

   95 pass_variabledef: variabledef •

    $default  reduce using rule 95 (pass_variabledef)


State 150

   57 parameter_type_list: typename pass_dims •

    $default  reduce using rule 57 (parameter_type_list)


State 151

   94 parameter_list: typename pass_variabledef •

    $default  reduce using rule 94 (parameter_list)


State 152

   54 short_par_func_header: func_header_start "(" parameter_type_list ")" •

    $default  reduce using rule 54 (short_par_func_header)


State 153

   56 parameter_type_list: parameter_type_list "," • typename pass_dims

    "char"   shift, and go to state 6
    "int"    shift, and go to state 31
    "float"  shift, and go to state 8
    "void"   shift, and go to state 11
    "id"     shift, and go to state 12

    typename       go to state 224
    standard_type  go to state 16


State 154

   90 full_par_func_header: func_header_start "(" parameter_list ")" •

    $default  reduce using rule 90 (full_par_func_header)


State 155

   93 parameter_list: parameter_list "," • typename pass_variabledef

    "char"   shift, and go to state 6
    "int"    shift, and go to state 31
    "float"  shift, and go to state 8
    "void"   shift, and go to state 11
    "id"     shift, and go to state 12

    typename       go to state 225
    standard_type  go to state 16


State 156

  116 statement: "continue" ";" •

    $default  reduce using rule 116 (statement)


State 157

  117 statement: "break" ";" •

    $default  reduce using rule 117 (statement)


State 158

  148 if_statement: "if" "(" • general_expression ")" statement if_tail

    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95

    $default  reduce using rule 105 (decltype)

    constant            go to state 98
    decltype            go to state 162
    general_expression  go to state 226
    assignment          go to state 106
    variable            go to state 107
    expression          go to state 108


State 159

  151 while_statement: "while" "(" • general_expression ")" statement

    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95

    $default  reduce using rule 105 (decltype)

    constant            go to state 98
    decltype            go to state 162
    general_expression  go to state 227
    assignment          go to state 106
    variable            go to state 107
    expression          go to state 108


State 160

  152 for_statement: "for" "(" • optexpr ";" optexpr ";" optexpr ")" statement

    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95

    ";"       reduce using rule 154 (optexpr)
    $default  reduce using rule 105 (decltype)

    constant            go to state 98
    decltype            go to state 162
    general_expression  go to state 163
    assignment          go to state 106
    variable            go to state 107
    expression          go to state 108
    optexpr             go to state 228


State 161

  155 switch_statement: "switch" "(" • general_expression ")" switch_tail

    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95

    $default  reduce using rule 105 (decltype)

    constant            go to state 98
    decltype            go to state 162
    general_expression  go to state 229
    assignment          go to state 106
    variable            go to state 107
    expression          go to state 108


State 162

  127 variable: decltype • "id"

    "id"  shift, and go to state 230


State 163

  120 general_expression: general_expression • "," general_expression
  153 optexpr: general_expression •

    ","  shift, and go to state 183

    $default  reduce using rule 153 (optexpr)


State 164

  169 return_statement: "return" optexpr • ";"

    ";"  shift, and go to state 231


State 165

  170 io_statement: "cin" ">>" • in_list ";"

    "static"  shift, and go to state 76
    "this"    shift, and go to state 79

    $default  reduce using rule 105 (decltype)

    decltype  go to state 162
    variable  go to state 232
    in_list   go to state 233
    in_item   go to state 234


State 166

  171 io_statement: "cout" "<<" • out_list ";"

    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "string"        shift, and go to state 235
    "("             shift, and go to state 95

    $default  reduce using rule 105 (decltype)

    constant            go to state 98
    decltype            go to state 162
    general_expression  go to state 236
    assignment          go to state 106
    variable            go to state 107
    expression          go to state 108
    out_list            go to state 237
    out_item            go to state 238


State 167

  142 expression: "length" "(" • general_expression ")"

    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95

    $default  reduce using rule 105 (decltype)

    constant            go to state 98
    decltype            go to state 162
    general_expression  go to state 239
    assignment          go to state 106
    variable            go to state 107
    expression          go to state 108


State 168

  125 variable: variable • "[" general_expression "]"
  126         | variable • "." "id"
  139 expression: variable • "++ --"
  140           | variable •
  141           | variable • "(" expression_list ")"

    "++ --"  shift, and go to state 184
    "("      shift, and go to state 185
    "."      shift, and go to state 186
    "["      shift, and go to state 188

    $default  reduce using rule 140 (expression)


State 169

  129 expression: expression • "||" expression
  130           | expression • "&&" expression
  131           | expression • "== !=" expression
  132           | expression • "< >= < <=" expression
  133           | expression • "+ -" expression
  134           | expression • "* / %" expression
  136           | "+ -" expression •

    "* / %"  shift, and go to state 194

    $default  reduce using rule 136 (expression)


State 170

  129 expression: expression • "||" expression
  130           | expression • "&&" expression
  131           | expression • "== !=" expression
  132           | expression • "< >= < <=" expression
  133           | expression • "+ -" expression
  134           | expression • "* / %" expression
  135           | "!" expression •

    $default  reduce using rule 135 (expression)


State 171

  125 variable: variable • "[" general_expression "]"
  126         | variable • "." "id"
  138 expression: "++ --" variable •

    "."  shift, and go to state 186
    "["  shift, and go to state 188

    $default  reduce using rule 138 (expression)


State 172

  129 expression: expression • "||" expression
  130           | expression • "&&" expression
  131           | expression • "== !=" expression
  132           | expression • "< >= < <=" expression
  133           | expression • "+ -" expression
  134           | expression • "* / %" expression
  137           | "SIZEOF" expression •

    "||"         shift, and go to state 189
    "&&"         shift, and go to state 190
    "== !="      shift, and go to state 191
    "< >= < <="  shift, and go to state 192
    "+ -"        shift, and go to state 193
    "* / %"      shift, and go to state 194

    "||"         [reduce using rule 137 (expression)]
    "&&"         [reduce using rule 137 (expression)]
    "== !="      [reduce using rule 137 (expression)]
    "< >= < <="  [reduce using rule 137 (expression)]
    "+ -"        [reduce using rule 137 (expression)]
    "* / %"      [reduce using rule 137 (expression)]
    $default     reduce using rule 137 (expression)


State 173

  145 expression: "(" standard_type • ")"

    ")"  shift, and go to state 240


State 174

  120 general_expression: general_expression • "," general_expression
  144 expression: "(" general_expression • ")"

    ")"  shift, and go to state 241
    ","  shift, and go to state 183


State 175

  179 comp_statement: "{" decl_statements • "}"

    "}"  shift, and go to state 242


State 176

   88 full_func_declaration: nopar_func_header "{" decl_statements "}" •

    $default  reduce using rule 88 (full_func_declaration)


State 177

  102 declarations: declarations decltype • typename variabledefs ";"
  127 variable: decltype • "id"

    "char"   shift, and go to state 6
    "int"    shift, and go to state 31
    "float"  shift, and go to state 8
    "void"   shift, and go to state 11
    "id"     shift, and go to state 179

    typename       go to state 243
    standard_type  go to state 16


State 178

   98 decl_statements: declarations statements •
  106 statements: statements • statement

    "static"        shift, and go to state 76
    "continue"      shift, and go to state 77
    "break"         shift, and go to state 78
    "this"          shift, and go to state 79
    "if"            shift, and go to state 80
    "while"         shift, and go to state 81
    "for"           shift, and go to state 82
    "switch"        shift, and go to state 83
    "return"        shift, and go to state 84
    "cin"           shift, and go to state 85
    "cout"          shift, and go to state 86
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95
    ";"             shift, and go to state 96
    "{"             shift, and go to state 97

    "id"      reduce using rule 105 (decltype)
    $default  reduce using rule 98 (decl_statements)

    constant              go to state 98
    decltype              go to state 162
    statement             go to state 181
    expression_statement  go to state 104
    general_expression    go to state 105
    assignment            go to state 106
    variable              go to state 107
    expression            go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 179

   14 typename: "id" •
  127 variable: decltype "id" •

    "id"      reduce using rule 14 (typename)
    $default  reduce using rule 127 (variable)


State 180

  103 declarations: decltype typename • variabledefs ";"

    "id"  shift, and go to state 145

    variabledefs  go to state 244
    variabledef   go to state 245


State 181

  106 statements: statements statement •

    $default  reduce using rule 106 (statements)


State 182

  119 expression_statement: general_expression ";" •

    $default  reduce using rule 119 (expression_statement)


State 183

  120 general_expression: general_expression "," • general_expression

    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95

    $default  reduce using rule 105 (decltype)

    constant            go to state 98
    decltype            go to state 162
    general_expression  go to state 246
    assignment          go to state 106
    variable            go to state 107
    expression          go to state 108


State 184

  139 expression: variable "++ --" •

    $default  reduce using rule 139 (expression)


State 185

  141 expression: variable "(" • expression_list ")"

    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95

    ")"       reduce using rule 147 (expression_list)
    $default  reduce using rule 105 (decltype)

    constant            go to state 98
    decltype            go to state 162
    general_expression  go to state 247
    assignment          go to state 106
    variable            go to state 107
    expression          go to state 108
    expression_list     go to state 248


State 186

  126 variable: variable "." • "id"

    "id"  shift, and go to state 249


State 187

  122 assignment: variable "=" • assignment
  123           | variable "=" • "string"

    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "string"        shift, and go to state 250
    "("             shift, and go to state 95

    $default  reduce using rule 105 (decltype)

    constant    go to state 98
    decltype    go to state 162
    assignment  go to state 251
    variable    go to state 107
    expression  go to state 108


State 188

  125 variable: variable "[" • general_expression "]"

    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95

    $default  reduce using rule 105 (decltype)

    constant            go to state 98
    decltype            go to state 162
    general_expression  go to state 252
    assignment          go to state 106
    variable            go to state 107
    expression          go to state 108


State 189

  129 expression: expression "||" • expression

    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95

    $default  reduce using rule 105 (decltype)

    constant    go to state 98
    decltype    go to state 162
    variable    go to state 168
    expression  go to state 253


State 190

  130 expression: expression "&&" • expression

    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95

    $default  reduce using rule 105 (decltype)

    constant    go to state 98
    decltype    go to state 162
    variable    go to state 168
    expression  go to state 254


State 191

  131 expression: expression "== !=" • expression

    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95

    $default  reduce using rule 105 (decltype)

    constant    go to state 98
    decltype    go to state 162
    variable    go to state 168
    expression  go to state 255


State 192

  132 expression: expression "< >= < <=" • expression

    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95

    $default  reduce using rule 105 (decltype)

    constant    go to state 98
    decltype    go to state 162
    variable    go to state 168
    expression  go to state 256


State 193

  133 expression: expression "+ -" • expression

    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95

    $default  reduce using rule 105 (decltype)

    constant    go to state 98
    decltype    go to state 162
    variable    go to state 168
    expression  go to state 257


State 194

  134 expression: expression "* / %" • expression

    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95

    $default  reduce using rule 105 (decltype)

    constant    go to state 98
    decltype    go to state 162
    variable    go to state 168
    expression  go to state 258


State 195

   86 full_func_declaration: full_par_func_header "{" decl_statements "}" •

    $default  reduce using rule 86 (full_func_declaration)


State 196

   96 pass_variabledef: "&" • "id"

    "id"  shift, and go to state 223


State 197

   89 full_par_func_header: class_func_header_start "(" parameter_list ")" •

    $default  reduce using rule 89 (full_par_func_header)


State 198

   87 full_func_declaration: nopar_class_func_header "{" decl_statements "}" •

    $default  reduce using rule 87 (full_func_declaration)


State 199

  180 main_function: main_header "{" decl_statements "}" •

    $default  reduce using rule 180 (main_function)


State 200

   38 access: "private" • ":"

    ":"  shift, and go to state 259


State 201

   39 access: "protected" • ":"

    ":"  shift, and go to state 260


State 202

   40 access: "public" • ":"

    ":"  shift, and go to state 261


State 203

   32 class_body: parent error members_methods • "}"
   36 members_methods: members_methods • access member_or_method

    "private"    shift, and go to state 200
    "protected"  shift, and go to state 201
    "public"     shift, and go to state 202
    "}"          shift, and go to state 262

    $default  reduce using rule 41 (access)

    access  go to state 263


State 204

   37 members_methods: access • member_or_method

    "char"   shift, and go to state 6
    "int"    shift, and go to state 31
    "float"  shift, and go to state 8
    "void"   shift, and go to state 11
    "id"     shift, and go to state 12

    typename                go to state 264
    standard_type           go to state 16
    member_or_method        go to state 265
    member                  go to state 266
    var_declaration         go to state 267
    method                  go to state 268
    short_func_declaration  go to state 269
    short_par_func_header   go to state 19
    func_header_start       go to state 270
    nopar_func_header       go to state 271


State 205

   31 class_body: parent "{" members_methods • "}"
   33           | parent "{" members_methods • error
   36 members_methods: members_methods • access member_or_method

    error        shift, and go to state 272
    "private"    shift, and go to state 200
    "protected"  shift, and go to state 201
    "public"     shift, and go to state 202
    "}"          shift, and go to state 273

    "char"   reduce using rule 41 (access)
    "int"    reduce using rule 41 (access)
    "float"  reduce using rule 41 (access)
    "void"   reduce using rule 41 (access)
    "id"     reduce using rule 41 (access)

    access  go to state 263


State 206

   10 typedef_declaration: error typename "id" dims ";" •

    $default  reduce using rule 10 (typedef_declaration)


State 207

   11 typedef_declaration: "typedef" typename error dims ";" •

    $default  reduce using rule 11 (typedef_declaration)


State 208

   12 typedef_declaration: "typedef" typename "id" dims error •
   22 dim: error • "int const" "]"
   25    | error • "]"

    "int const"  shift, and go to state 213
    "]"          shift, and go to state 214

    $default  reduce using rule 12 (typedef_declaration)


State 209

    9 typedef_declaration: "typedef" typename "id" dims ";" •

    $default  reduce using rule 9 (typedef_declaration)


State 210

   64 id_list: "id" initializer •

    $default  reduce using rule 64 (id_list)


State 211

   63 id_list: id_list "," • "id" initializer

    "id"  shift, and go to state 274


State 212

   62 enum_body: "{" id_list "}" •

    $default  reduce using rule 62 (enum_body)


State 213

   22 dim: error "int const" • "]"

    "]"  shift, and go to state 275


State 214

   25 dim: error "]" •

    $default  reduce using rule 25 (dim)


State 215

   26 dim: "[" error •

    $default  reduce using rule 26 (dim)


State 216

   21 dim: "[" "int const" • "]"
   23    | "[" "int const" • error

    error  shift, and go to state 276
    "]"    shift, and go to state 277


State 217

   24 dim: "[" "]" •

    $default  reduce using rule 24 (dim)


State 218

   83 init_values: init_value •

    $default  reduce using rule 83 (init_values)


State 219

   74 init_value: error init_values • "}"
   82 init_values: init_values • "," init_value

    ","  shift, and go to state 278
    "}"  shift, and go to state 279


State 220

   73 init_value: "{" init_values • "}"
   75           | "{" init_values • error
   82 init_values: init_values • "," init_value

    error  shift, and go to state 280
    ","    shift, and go to state 278
    "}"    shift, and go to state 281


State 221

   72 init_value: sign "id" •

    $default  reduce using rule 72 (init_value)


State 222

   71 init_value: sign constant •

    $default  reduce using rule 71 (init_value)


State 223

   96 pass_variabledef: "&" "id" •

    $default  reduce using rule 96 (pass_variabledef)


State 224

   56 parameter_type_list: parameter_type_list "," typename • pass_dims

    "&"  shift, and go to state 282

    $default  reduce using rule 20 (dims)

    dims       go to state 148
    pass_dims  go to state 283


State 225

   93 parameter_list: parameter_list "," typename • pass_variabledef

    "id"  shift, and go to state 145
    "&"   shift, and go to state 196

    variabledef       go to state 149
    pass_variabledef  go to state 284


State 226

  120 general_expression: general_expression • "," general_expression
  148 if_statement: "if" "(" general_expression • ")" statement if_tail

    ")"  shift, and go to state 285
    ","  shift, and go to state 183


State 227

  120 general_expression: general_expression • "," general_expression
  151 while_statement: "while" "(" general_expression • ")" statement

    ")"  shift, and go to state 286
    ","  shift, and go to state 183


State 228

  152 for_statement: "for" "(" optexpr • ";" optexpr ";" optexpr ")" statement

    ";"  shift, and go to state 287


State 229

  120 general_expression: general_expression • "," general_expression
  155 switch_statement: "switch" "(" general_expression • ")" switch_tail

    ")"  shift, and go to state 288
    ","  shift, and go to state 183


State 230

  127 variable: decltype "id" •

    $default  reduce using rule 127 (variable)


State 231

  169 return_statement: "return" optexpr ";" •

    $default  reduce using rule 169 (return_statement)


State 232

  125 variable: variable • "[" general_expression "]"
  126         | variable • "." "id"
  174 in_item: variable •

    "."  shift, and go to state 186
    "["  shift, and go to state 188

    $default  reduce using rule 174 (in_item)


State 233

  170 io_statement: "cin" ">>" in_list • ";"
  172 in_list: in_list • ">>" in_item

    ";"   shift, and go to state 289
    ">>"  shift, and go to state 290


State 234

  173 in_list: in_item •

    $default  reduce using rule 173 (in_list)


State 235

  178 out_item: "string" •

    $default  reduce using rule 178 (out_item)


State 236

  120 general_expression: general_expression • "," general_expression
  177 out_item: general_expression •

    ","  shift, and go to state 183

    $default  reduce using rule 177 (out_item)


State 237

  171 io_statement: "cout" "<<" out_list • ";"
  175 out_list: out_list • "<<" out_item

    ";"   shift, and go to state 291
    "<<"  shift, and go to state 292


State 238

  176 out_list: out_item •

    $default  reduce using rule 176 (out_list)


State 239

  120 general_expression: general_expression • "," general_expression
  142 expression: "length" "(" general_expression • ")"

    ")"  shift, and go to state 293
    ","  shift, and go to state 183


State 240

  145 expression: "(" standard_type ")" •

    $default  reduce using rule 145 (expression)


State 241

  144 expression: "(" general_expression ")" •

    $default  reduce using rule 144 (expression)


State 242

  179 comp_statement: "{" decl_statements "}" •

    $default  reduce using rule 179 (comp_statement)


State 243

  102 declarations: declarations decltype typename • variabledefs ";"

    "id"  shift, and go to state 145

    variabledefs  go to state 294
    variabledef   go to state 245


State 244

   46 variabledefs: variabledefs • "," variabledef
  103 declarations: decltype typename variabledefs • ";"

    ";"  shift, and go to state 295
    ","  shift, and go to state 296


State 245

   47 variabledefs: variabledef •

    $default  reduce using rule 47 (variabledefs)


State 246

  120 general_expression: general_expression • "," general_expression
  120                   | general_expression "," general_expression •

    $default  reduce using rule 120 (general_expression)


State 247

  120 general_expression: general_expression • "," general_expression
  146 expression_list: general_expression •

    ","  shift, and go to state 183

    $default  reduce using rule 146 (expression_list)


State 248

  141 expression: variable "(" expression_list • ")"

    ")"  shift, and go to state 297


State 249

  126 variable: variable "." "id" •

    $default  reduce using rule 126 (variable)


State 250

  123 assignment: variable "=" "string" •

    $default  reduce using rule 123 (assignment)


State 251

  122 assignment: variable "=" assignment •

    $default  reduce using rule 122 (assignment)


State 252

  120 general_expression: general_expression • "," general_expression
  125 variable: variable "[" general_expression • "]"

    ","  shift, and go to state 183
    "]"  shift, and go to state 298


State 253

  129 expression: expression • "||" expression
  129           | expression "||" expression •
  130           | expression • "&&" expression
  131           | expression • "== !=" expression
  132           | expression • "< >= < <=" expression
  133           | expression • "+ -" expression
  134           | expression • "* / %" expression

    "&&"         shift, and go to state 190
    "== !="      shift, and go to state 191
    "< >= < <="  shift, and go to state 192
    "+ -"        shift, and go to state 193
    "* / %"      shift, and go to state 194

    $default  reduce using rule 129 (expression)


State 254

  129 expression: expression • "||" expression
  130           | expression • "&&" expression
  130           | expression "&&" expression •
  131           | expression • "== !=" expression
  132           | expression • "< >= < <=" expression
  133           | expression • "+ -" expression
  134           | expression • "* / %" expression

    "== !="      shift, and go to state 191
    "< >= < <="  shift, and go to state 192
    "+ -"        shift, and go to state 193
    "* / %"      shift, and go to state 194

    $default  reduce using rule 130 (expression)


State 255

  129 expression: expression • "||" expression
  130           | expression • "&&" expression
  131           | expression • "== !=" expression
  131           | expression "== !=" expression •
  132           | expression • "< >= < <=" expression
  133           | expression • "+ -" expression
  134           | expression • "* / %" expression

    "< >= < <="  shift, and go to state 192
    "+ -"        shift, and go to state 193
    "* / %"      shift, and go to state 194

    $default  reduce using rule 131 (expression)


State 256

  129 expression: expression • "||" expression
  130           | expression • "&&" expression
  131           | expression • "== !=" expression
  132           | expression • "< >= < <=" expression
  132           | expression "< >= < <=" expression •
  133           | expression • "+ -" expression
  134           | expression • "* / %" expression

    "+ -"    shift, and go to state 193
    "* / %"  shift, and go to state 194

    $default  reduce using rule 132 (expression)


State 257

  129 expression: expression • "||" expression
  130           | expression • "&&" expression
  131           | expression • "== !=" expression
  132           | expression • "< >= < <=" expression
  133           | expression • "+ -" expression
  133           | expression "+ -" expression •
  134           | expression • "* / %" expression

    "* / %"  shift, and go to state 194

    $default  reduce using rule 133 (expression)


State 258

  129 expression: expression • "||" expression
  130           | expression • "&&" expression
  131           | expression • "== !=" expression
  132           | expression • "< >= < <=" expression
  133           | expression • "+ -" expression
  134           | expression • "* / %" expression
  134           | expression "* / %" expression •

    $default  reduce using rule 134 (expression)


State 259

   38 access: "private" ":" •

    $default  reduce using rule 38 (access)


State 260

   39 access: "protected" ":" •

    $default  reduce using rule 39 (access)


State 261

   40 access: "public" ":" •

    $default  reduce using rule 40 (access)


State 262

   32 class_body: parent error members_methods "}" •

    $default  reduce using rule 32 (class_body)


State 263

   36 members_methods: members_methods access • member_or_method

    "char"   shift, and go to state 6
    "int"    shift, and go to state 31
    "float"  shift, and go to state 8
    "void"   shift, and go to state 11
    "id"     shift, and go to state 12

    typename                go to state 264
    standard_type           go to state 16
    member_or_method        go to state 299
    member                  go to state 266
    var_declaration         go to state 267
    method                  go to state 268
    short_func_declaration  go to state 269
    short_par_func_header   go to state 19
    func_header_start       go to state 270
    nopar_func_header       go to state 271


State 264

   45 var_declaration: typename • variabledefs ";"
   55 func_header_start: typename • "id"

    "id"  shift, and go to state 300

    variabledefs  go to state 301
    variabledef   go to state 245


State 265

   37 members_methods: access member_or_method •

    $default  reduce using rule 37 (members_methods)


State 266

   42 member_or_method: member •

    $default  reduce using rule 42 (member_or_method)


State 267

   44 member: var_declaration •

    $default  reduce using rule 44 (member)


State 268

   43 member_or_method: method •

    $default  reduce using rule 43 (member_or_method)


State 269

   49 method: short_func_declaration •

    $default  reduce using rule 49 (method)


State 270

   54 short_par_func_header: func_header_start • "(" parameter_type_list ")"
   60 nopar_func_header: func_header_start • "(" ")"

    "("  shift, and go to state 302


State 271

   52 short_func_declaration: nopar_func_header • ";"
   53                       | nopar_func_header • error

    error  shift, and go to state 47
    ";"    shift, and go to state 48


State 272

   33 class_body: parent "{" members_methods error •

    $default  reduce using rule 33 (class_body)


State 273

   31 class_body: parent "{" members_methods "}" •

    $default  reduce using rule 31 (class_body)


State 274

   63 id_list: id_list "," "id" • initializer

    "="  shift, and go to state 67

    $default  reduce using rule 70 (initializer)

    initializer  go to state 303


State 275

   22 dim: error "int const" "]" •

    $default  reduce using rule 22 (dim)


State 276

   23 dim: "[" "int const" error •

    $default  reduce using rule 23 (dim)


State 277

   21 dim: "[" "int const" "]" •

    $default  reduce using rule 21 (dim)


State 278

   82 init_values: init_values "," • init_value

    error     shift, and go to state 139
    "+ -"     shift, and go to state 140
    "string"  shift, and go to state 141
    "{"       shift, and go to state 142

    "id"            reduce using rule 78 (sign)
    "int const"     reduce using rule 78 (sign)
    "double const"  reduce using rule 78 (sign)
    "char const"    reduce using rule 78 (sign)

    init_value  go to state 304
    sign        go to state 144


State 279

   74 init_value: error init_values "}" •

    $default  reduce using rule 74 (init_value)


State 280

   75 init_value: "{" init_values error •

    $default  reduce using rule 75 (init_value)


State 281

   73 init_value: "{" init_values "}" •

    $default  reduce using rule 73 (init_value)


State 282

   59 pass_dims: "&" •

    $default  reduce using rule 59 (pass_dims)


State 283

   56 parameter_type_list: parameter_type_list "," typename pass_dims •

    $default  reduce using rule 56 (parameter_type_list)


State 284

   93 parameter_list: parameter_list "," typename pass_variabledef •

    $default  reduce using rule 93 (parameter_list)


State 285

  148 if_statement: "if" "(" general_expression ")" • statement if_tail

    "static"        shift, and go to state 76
    "continue"      shift, and go to state 77
    "break"         shift, and go to state 78
    "this"          shift, and go to state 79
    "if"            shift, and go to state 80
    "while"         shift, and go to state 81
    "for"           shift, and go to state 82
    "switch"        shift, and go to state 83
    "return"        shift, and go to state 84
    "cin"           shift, and go to state 85
    "cout"          shift, and go to state 86
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95
    ";"             shift, and go to state 96
    "{"             shift, and go to state 97

    $default  reduce using rule 105 (decltype)

    constant              go to state 98
    decltype              go to state 162
    statement             go to state 305
    expression_statement  go to state 104
    general_expression    go to state 105
    assignment            go to state 106
    variable              go to state 107
    expression            go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 286

  151 while_statement: "while" "(" general_expression ")" • statement

    "static"        shift, and go to state 76
    "continue"      shift, and go to state 77
    "break"         shift, and go to state 78
    "this"          shift, and go to state 79
    "if"            shift, and go to state 80
    "while"         shift, and go to state 81
    "for"           shift, and go to state 82
    "switch"        shift, and go to state 83
    "return"        shift, and go to state 84
    "cin"           shift, and go to state 85
    "cout"          shift, and go to state 86
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95
    ";"             shift, and go to state 96
    "{"             shift, and go to state 97

    $default  reduce using rule 105 (decltype)

    constant              go to state 98
    decltype              go to state 162
    statement             go to state 306
    expression_statement  go to state 104
    general_expression    go to state 105
    assignment            go to state 106
    variable              go to state 107
    expression            go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 287

  152 for_statement: "for" "(" optexpr ";" • optexpr ";" optexpr ")" statement

    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95

    ";"       reduce using rule 154 (optexpr)
    $default  reduce using rule 105 (decltype)

    constant            go to state 98
    decltype            go to state 162
    general_expression  go to state 163
    assignment          go to state 106
    variable            go to state 107
    expression          go to state 108
    optexpr             go to state 307


State 288

  155 switch_statement: "switch" "(" general_expression ")" • switch_tail

    "case"  shift, and go to state 308
    "{"     shift, and go to state 309

    switch_tail           go to state 310
    single_casestatement  go to state 311


State 289

  170 io_statement: "cin" ">>" in_list ";" •

    $default  reduce using rule 170 (io_statement)


State 290

  172 in_list: in_list ">>" • in_item

    "static"  shift, and go to state 76
    "this"    shift, and go to state 79

    $default  reduce using rule 105 (decltype)

    decltype  go to state 162
    variable  go to state 232
    in_item   go to state 312


State 291

  171 io_statement: "cout" "<<" out_list ";" •

    $default  reduce using rule 171 (io_statement)


State 292

  175 out_list: out_list "<<" • out_item

    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "string"        shift, and go to state 235
    "("             shift, and go to state 95

    $default  reduce using rule 105 (decltype)

    constant            go to state 98
    decltype            go to state 162
    general_expression  go to state 236
    assignment          go to state 106
    variable            go to state 107
    expression          go to state 108
    out_item            go to state 313


State 293

  142 expression: "length" "(" general_expression ")" •

    $default  reduce using rule 142 (expression)


State 294

   46 variabledefs: variabledefs • "," variabledef
  102 declarations: declarations decltype typename variabledefs • ";"

    ";"  shift, and go to state 314
    ","  shift, and go to state 296


State 295

  103 declarations: decltype typename variabledefs ";" •

    $default  reduce using rule 103 (declarations)


State 296

   46 variabledefs: variabledefs "," • variabledef

    "id"  shift, and go to state 145

    variabledef  go to state 315


State 297

  141 expression: variable "(" expression_list ")" •

    $default  reduce using rule 141 (expression)


State 298

  125 variable: variable "[" general_expression "]" •

    $default  reduce using rule 125 (variable)


State 299

   36 members_methods: members_methods access member_or_method •

    $default  reduce using rule 36 (members_methods)


State 300

   48 variabledef: "id" • dims
   55 func_header_start: typename "id" •

    "("       reduce using rule 55 (func_header_start)
    $default  reduce using rule 20 (dims)

    dims  go to state 66


State 301

   45 var_declaration: typename variabledefs • ";"
   46 variabledefs: variabledefs • "," variabledef

    ";"  shift, and go to state 316
    ","  shift, and go to state 296


State 302

   54 short_par_func_header: func_header_start "(" • parameter_type_list ")"
   60 nopar_func_header: func_header_start "(" • ")"

    "char"   shift, and go to state 6
    "int"    shift, and go to state 31
    "float"  shift, and go to state 8
    "void"   shift, and go to state 11
    "id"     shift, and go to state 12
    ")"      shift, and go to state 72

    typename             go to state 317
    standard_type        go to state 16
    parameter_type_list  go to state 74


State 303

   63 id_list: id_list "," "id" initializer •

    $default  reduce using rule 63 (id_list)


State 304

   82 init_values: init_values "," init_value •

    $default  reduce using rule 82 (init_values)


State 305

  148 if_statement: "if" "(" general_expression ")" statement • if_tail

    "else"  shift, and go to state 318

    $default  reduce using rule 150 (if_tail)

    if_tail  go to state 319


State 306

  151 while_statement: "while" "(" general_expression ")" statement •

    $default  reduce using rule 151 (while_statement)


State 307

  152 for_statement: "for" "(" optexpr ";" optexpr • ";" optexpr ")" statement

    ";"  shift, and go to state 320


State 308

  167 single_casestatement: "case" • constant ":" single_casestatement
  168                     | "case" • constant ":" statement

    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90

    constant  go to state 321


State 309

  156 switch_tail: "{" • decl_cases "}"

    "static"   shift, and go to state 76
    "case"     shift, and go to state 322
    "default"  shift, and go to state 323

    "}"       reduce using rule 161 (decl_cases)
    $default  reduce using rule 105 (decltype)

    declarations    go to state 324
    decltype        go to state 325
    decl_cases      go to state 326
    casestatements  go to state 327
    casestatement   go to state 328


State 310

  155 switch_statement: "switch" "(" general_expression ")" switch_tail •

    $default  reduce using rule 155 (switch_statement)


State 311

  157 switch_tail: single_casestatement •

    $default  reduce using rule 157 (switch_tail)


State 312

  172 in_list: in_list ">>" in_item •

    $default  reduce using rule 172 (in_list)


State 313

  175 out_list: out_list "<<" out_item •

    $default  reduce using rule 175 (out_list)


State 314

  102 declarations: declarations decltype typename variabledefs ";" •

    $default  reduce using rule 102 (declarations)


State 315

   46 variabledefs: variabledefs "," variabledef •

    $default  reduce using rule 46 (variabledefs)


State 316

   45 var_declaration: typename variabledefs ";" •

    $default  reduce using rule 45 (var_declaration)


State 317

   57 parameter_type_list: typename • pass_dims

    "&"  shift, and go to state 282

    $default  reduce using rule 20 (dims)

    dims       go to state 148
    pass_dims  go to state 150


State 318

  149 if_tail: "else" • statement

    "static"        shift, and go to state 76
    "continue"      shift, and go to state 77
    "break"         shift, and go to state 78
    "this"          shift, and go to state 79
    "if"            shift, and go to state 80
    "while"         shift, and go to state 81
    "for"           shift, and go to state 82
    "switch"        shift, and go to state 83
    "return"        shift, and go to state 84
    "cin"           shift, and go to state 85
    "cout"          shift, and go to state 86
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95
    ";"             shift, and go to state 96
    "{"             shift, and go to state 97

    $default  reduce using rule 105 (decltype)

    constant              go to state 98
    decltype              go to state 162
    statement             go to state 329
    expression_statement  go to state 104
    general_expression    go to state 105
    assignment            go to state 106
    variable              go to state 107
    expression            go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 319

  148 if_statement: "if" "(" general_expression ")" statement if_tail •

    $default  reduce using rule 148 (if_statement)


State 320

  152 for_statement: "for" "(" optexpr ";" optexpr ";" • optexpr ")" statement

    "static"        shift, and go to state 76
    "this"          shift, and go to state 79
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95

    ")"       reduce using rule 154 (optexpr)
    $default  reduce using rule 105 (decltype)

    constant            go to state 98
    decltype            go to state 162
    general_expression  go to state 163
    assignment          go to state 106
    variable            go to state 107
    expression          go to state 108
    optexpr             go to state 330


State 321

  167 single_casestatement: "case" constant • ":" single_casestatement
  168                     | "case" constant • ":" statement

    ":"  shift, and go to state 331


State 322

  164 casestatement: "case" • constant ":" casestatement
  165              | "case" • constant ":" statements

    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90

    constant  go to state 332


State 323

  166 casestatement: "default" • ":" statements

    ":"  shift, and go to state 333


State 324

  102 declarations: declarations • decltype typename variabledefs ";"
  158 decl_cases: declarations • casestatements
  159           | declarations •

    "static"   shift, and go to state 76
    "case"     shift, and go to state 322
    "default"  shift, and go to state 323

    "}"       reduce using rule 159 (decl_cases)
    $default  reduce using rule 105 (decltype)

    decltype        go to state 334
    casestatements  go to state 335
    casestatement   go to state 328


State 325

  103 declarations: decltype • typename variabledefs ";"

    "char"   shift, and go to state 6
    "int"    shift, and go to state 31
    "float"  shift, and go to state 8
    "void"   shift, and go to state 11
    "id"     shift, and go to state 12

    typename       go to state 180
    standard_type  go to state 16


State 326

  156 switch_tail: "{" decl_cases • "}"

    "}"  shift, and go to state 336


State 327

  160 decl_cases: casestatements •
  162 casestatements: casestatements • casestatement

    "case"     shift, and go to state 322
    "default"  shift, and go to state 323

    $default  reduce using rule 160 (decl_cases)

    casestatement  go to state 337


State 328

  163 casestatements: casestatement •

    $default  reduce using rule 163 (casestatements)


State 329

  149 if_tail: "else" statement •

    $default  reduce using rule 149 (if_tail)


State 330

  152 for_statement: "for" "(" optexpr ";" optexpr ";" optexpr • ")" statement

    ")"  shift, and go to state 338


State 331

  167 single_casestatement: "case" constant ":" • single_casestatement
  168                     | "case" constant ":" • statement

    "static"        shift, and go to state 76
    "continue"      shift, and go to state 77
    "break"         shift, and go to state 78
    "this"          shift, and go to state 79
    "if"            shift, and go to state 80
    "while"         shift, and go to state 81
    "for"           shift, and go to state 82
    "switch"        shift, and go to state 83
    "case"          shift, and go to state 308
    "return"        shift, and go to state 84
    "cin"           shift, and go to state 85
    "cout"          shift, and go to state 86
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95
    ";"             shift, and go to state 96
    "{"             shift, and go to state 97

    $default  reduce using rule 105 (decltype)

    constant              go to state 98
    decltype              go to state 162
    statement             go to state 339
    expression_statement  go to state 104
    general_expression    go to state 105
    assignment            go to state 106
    variable              go to state 107
    expression            go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    single_casestatement  go to state 340
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 332

  164 casestatement: "case" constant • ":" casestatement
  165              | "case" constant • ":" statements

    ":"  shift, and go to state 341


State 333

  166 casestatement: "default" ":" • statements

    "static"        shift, and go to state 76
    "continue"      shift, and go to state 77
    "break"         shift, and go to state 78
    "this"          shift, and go to state 79
    "if"            shift, and go to state 80
    "while"         shift, and go to state 81
    "for"           shift, and go to state 82
    "switch"        shift, and go to state 83
    "return"        shift, and go to state 84
    "cin"           shift, and go to state 85
    "cout"          shift, and go to state 86
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95
    ";"             shift, and go to state 96
    "{"             shift, and go to state 97

    $default  reduce using rule 105 (decltype)

    constant              go to state 98
    decltype              go to state 162
    statements            go to state 342
    statement             go to state 103
    expression_statement  go to state 104
    general_expression    go to state 105
    assignment            go to state 106
    variable              go to state 107
    expression            go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 334

  102 declarations: declarations decltype • typename variabledefs ";"

    "char"   shift, and go to state 6
    "int"    shift, and go to state 31
    "float"  shift, and go to state 8
    "void"   shift, and go to state 11
    "id"     shift, and go to state 12

    typename       go to state 243
    standard_type  go to state 16


State 335

  158 decl_cases: declarations casestatements •
  162 casestatements: casestatements • casestatement

    "case"     shift, and go to state 322
    "default"  shift, and go to state 323

    $default  reduce using rule 158 (decl_cases)

    casestatement  go to state 337


State 336

  156 switch_tail: "{" decl_cases "}" •

    $default  reduce using rule 156 (switch_tail)


State 337

  162 casestatements: casestatements casestatement •

    $default  reduce using rule 162 (casestatements)


State 338

  152 for_statement: "for" "(" optexpr ";" optexpr ";" optexpr ")" • statement

    "static"        shift, and go to state 76
    "continue"      shift, and go to state 77
    "break"         shift, and go to state 78
    "this"          shift, and go to state 79
    "if"            shift, and go to state 80
    "while"         shift, and go to state 81
    "for"           shift, and go to state 82
    "switch"        shift, and go to state 83
    "return"        shift, and go to state 84
    "cin"           shift, and go to state 85
    "cout"          shift, and go to state 86
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95
    ";"             shift, and go to state 96
    "{"             shift, and go to state 97

    $default  reduce using rule 105 (decltype)

    constant              go to state 98
    decltype              go to state 162
    statement             go to state 343
    expression_statement  go to state 104
    general_expression    go to state 105
    assignment            go to state 106
    variable              go to state 107
    expression            go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 339

  168 single_casestatement: "case" constant ":" statement •

    $default  reduce using rule 168 (single_casestatement)


State 340

  167 single_casestatement: "case" constant ":" single_casestatement •

    $default  reduce using rule 167 (single_casestatement)


State 341

  164 casestatement: "case" constant ":" • casestatement
  165              | "case" constant ":" • statements

    "static"        shift, and go to state 76
    "continue"      shift, and go to state 77
    "break"         shift, and go to state 78
    "this"          shift, and go to state 79
    "if"            shift, and go to state 80
    "while"         shift, and go to state 81
    "for"           shift, and go to state 82
    "switch"        shift, and go to state 83
    "case"          shift, and go to state 322
    "default"       shift, and go to state 323
    "return"        shift, and go to state 84
    "cin"           shift, and go to state 85
    "cout"          shift, and go to state 86
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95
    ";"             shift, and go to state 96
    "{"             shift, and go to state 97

    $default  reduce using rule 105 (decltype)

    constant              go to state 98
    decltype              go to state 162
    statements            go to state 344
    statement             go to state 103
    expression_statement  go to state 104
    general_expression    go to state 105
    assignment            go to state 106
    variable              go to state 107
    expression            go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    casestatement         go to state 345
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 342

  106 statements: statements • statement
  166 casestatement: "default" ":" statements •

    "static"        shift, and go to state 76
    "continue"      shift, and go to state 77
    "break"         shift, and go to state 78
    "this"          shift, and go to state 79
    "if"            shift, and go to state 80
    "while"         shift, and go to state 81
    "for"           shift, and go to state 82
    "switch"        shift, and go to state 83
    "return"        shift, and go to state 84
    "cin"           shift, and go to state 85
    "cout"          shift, and go to state 86
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95
    ";"             shift, and go to state 96
    "{"             shift, and go to state 97

    "id"      reduce using rule 105 (decltype)
    $default  reduce using rule 166 (casestatement)

    constant              go to state 98
    decltype              go to state 162
    statement             go to state 181
    expression_statement  go to state 104
    general_expression    go to state 105
    assignment            go to state 106
    variable              go to state 107
    expression            go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 343

  152 for_statement: "for" "(" optexpr ";" optexpr ";" optexpr ")" statement •

    $default  reduce using rule 152 (for_statement)


State 344

  106 statements: statements • statement
  165 casestatement: "case" constant ":" statements •

    "static"        shift, and go to state 76
    "continue"      shift, and go to state 77
    "break"         shift, and go to state 78
    "this"          shift, and go to state 79
    "if"            shift, and go to state 80
    "while"         shift, and go to state 81
    "for"           shift, and go to state 82
    "switch"        shift, and go to state 83
    "return"        shift, and go to state 84
    "cin"           shift, and go to state 85
    "cout"          shift, and go to state 86
    "length"        shift, and go to state 87
    "int const"     shift, and go to state 88
    "double const"  shift, and go to state 89
    "char const"    shift, and go to state 90
    "+ -"           shift, and go to state 91
    "!"             shift, and go to state 92
    "++ --"         shift, and go to state 93
    "SIZEOF"        shift, and go to state 94
    "("             shift, and go to state 95
    ";"             shift, and go to state 96
    "{"             shift, and go to state 97

    "id"      reduce using rule 105 (decltype)
    $default  reduce using rule 165 (casestatement)

    constant              go to state 98
    decltype              go to state 162
    statement             go to state 181
    expression_statement  go to state 104
    general_expression    go to state 105
    assignment            go to state 106
    variable              go to state 107
    expression            go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 345

  164 casestatement: "case" constant ":" casestatement •

    $default  reduce using rule 164 (casestatement)
