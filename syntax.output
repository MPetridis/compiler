State 154 conflicts: 6 shift/reduce


Grammar

    0 $accept: program "eof"

    1 program: global_declarations main_function

    2 global_declarations: global_declarations global_declaration
    3                    | ε

    4 global_declaration: typedef_declaration
    5                   | class_declaration
    6                   | enum_declaration
    7                   | global_var_declaration
    8                   | func_declaration

    9 typedef_declaration: "typedef" typename "id" dims ";"

   10 typename: standard_type
   11         | "id"

   12 standard_type: "char"
   13              | "int"
   14              | "float"
   15              | "void"

   16 dims: dims dim
   17     | ε

   18 dim: "[" "int const" "]"
   19    | "[" "]"

   20 class_declaration: "class" "id" class_body ";"

   21 class_body: parent "{" members_methods "}"

   22 parent: ":" "id"
   23       | ε

   24 members_methods: members_methods access member_or_method
   25                | access member_or_method

   26 access: "private" ":"
   27       | "protected" ":"
   28       | "public" ":"
   29       | ε

   30 member_or_method: member
   31                 | method

   32 member: var_declaration

   33 var_declaration: typename variabledefs ";"

   34 variabledefs: variabledefs "," variabledef
   35             | variabledef

   36 variabledef: "id" dims

   37 method: short_func_declaration

   38 short_func_declaration: short_par_func_header ";"
   39                       | nopar_func_header ";"

   40 short_par_func_header: func_header_start "(" parameter_type_list ")"

   41 func_header_start: typename "id"

   42 parameter_type_list: parameter_type_list "," typename pass_dims
   43                    | typename pass_dims

   44 pass_dims: dims
   45          | "&"

   46 nopar_func_header: func_header_start "(" ")"

   47 enum_declaration: "enum" "id" enum_body ";"

   48 enum_body: "{" id_list "}"

   49 id_list: id_list "," "id" initializer
   50        | "id" initializer

   51 global_var_declaration: typename init_variabledefs ";"

   52 init_variabledefs: init_variabledefs "," init_variabledef
   53                  | init_variabledef

   54 init_variabledef: variabledef initializer

   55 initializer: "=" init_value
   56            | ε

   57 init_value: sign constant
   58           | sign "id"
   59           | "{" init_values "}"
   60           | "string"

   61 sign: "+ -"
   62     | ε

   63 constant: "char const"
   64         | "int const"
   65         | "double const"

   66 init_values: init_values "," init_value
   67            | init_value

   68 func_declaration: short_func_declaration
   69                 | full_func_declaration

   70 full_func_declaration: full_par_func_header "{" decl_statements "}"
   71                      | nopar_class_func_header "{" decl_statements "}"
   72                      | nopar_func_header "{" decl_statements "}"

   73 full_par_func_header: class_func_header_start "(" parameter_list ")"
   74                     | func_header_start "(" parameter_list ")"

   75 class_func_header_start: typename func_class "id"

   76 func_class: "id" "::"

   77 parameter_list: parameter_list "," typename pass_variabledef
   78               | typename pass_variabledef

   79 pass_variabledef: variabledef
   80                 | "&" "id"

   81 nopar_class_func_header: class_func_header_start "(" ")"

   82 decl_statements: declarations statements
   83                | declarations
   84                | statements
   85                | ε

   86 declarations: declarations decltype typename variabledefs ";"
   87             | decltype typename variabledefs ";"

   88 decltype: "static"
   89         | ε

   90 statements: statements statement
   91           | statement

   92 statement: expression_statement
   93          | if_statement
   94          | while_statement
   95          | for_statement
   96          | switch_statement
   97          | return_statement
   98          | io_statement
   99          | comp_statement
  100          | "continue" ";"
  101          | "break" ";"
  102          | ";"

  103 expression_statement: general_expression ";"

  104 general_expression: general_expression "," general_expression
  105                   | assignment

  106 assignment: variable "=" assignment
  107           | variable "=" "string"
  108           | expression

  109 variable: variable "[" general_expression "]"
  110         | variable "." "id"
  111         | decltype "id"
  112         | "this"

  113 expression: expression "||" expression
  114           | expression "&&" expression
  115           | expression "== !=" expression
  116           | expression "< >= < <=" expression
  117           | expression "+ -" expression
  118           | expression "* / %" expression
  119           | "!" expression
  120           | "+ -" expression
  121           | "SIZEOF" expression
  122           | "++ --" variable
  123           | variable "++ --"
  124           | variable
  125           | variable "(" expression_list ")"
  126           | "length" "(" general_expression ")"
  127           | constant
  128           | "(" general_expression ")"
  129           | "(" standard_type ")"

  130 expression_list: general_expression
  131                | ε

  132 if_statement: "if" "(" general_expression ")" statement if_tail

  133 if_tail: "else" statement
  134        | ε

  135 while_statement: "while" "(" general_expression ")" statement

  136 for_statement: "for" "(" optexpr ";" optexpr ";" optexpr ")" statement

  137 optexpr: general_expression
  138        | ε

  139 switch_statement: "switch" "(" general_expression ")" switch_tail

  140 switch_tail: "{" decl_cases "}"
  141            | single_casestatement

  142 decl_cases: declarations casestatements
  143           | declarations
  144           | casestatements
  145           | ε

  146 casestatements: casestatements casestatement
  147               | casestatement

  148 casestatement: "case" constant ":" casestatement
  149              | "case" constant ":" statements
  150              | "default" ":" statements

  151 single_casestatement: "case" constant ":" single_casestatement
  152                     | "case" constant ":" statement

  153 return_statement: "return" optexpr ";"

  154 io_statement: "cin" ">>" in_list ";"
  155             | "cout" "<<" out_list ";"

  156 in_list: in_item ">>" in_list
  157        | in_item

  158 out_list: out_item "<<" out_list
  159         | out_item

  160 in_item: variable

  161 out_item: general_expression
  162         | "string"

  163 comp_statement: "{" decl_statements "}"

  164 main_function: main_header "{" decl_statements "}"

  165 main_header: "int" "main" "(" ")"


Terminals, with rules where they appear

    "eof" (0) 0
    error (256)
    "typedef" (258) 9
    "char" (259) 12
    "int" (260) 13 165
    "float" (261) 14
    "enum" (262) 47
    "class" (263) 20
    "private" (264) 26
    "protected" (265) 27
    "public" (266) 28
    "void" (267) 15
    "static" (268) 88
    "continue" (269) 100
    "break" (270) 101
    "this" (271) 112
    "if" (272) 132
    "else" (273) 133
    "while" (274) 135
    "for" (275) 136
    "switch" (276) 139
    "case" (277) 148 149 151 152
    "default" (278) 150
    "return" (279) 153
    "cin" (280) 154
    "cout" (281) 155
    "length" (282) 126
    "main" (283) 165
    "id" <strval> (284) 9 11 20 22 36 41 47 49 50 58 75 76 80 110 111
    "int const" <intval> (285) 18 64
    "double const" <doubleval> (286) 65
    "char const" <charval> (287) 63
    "||" (288) 113
    "&&" (289) 114
    "== !=" (290) 115
    "< >= < <=" (291) 116
    "+ -" (292) 61 117 120
    "* / %" (293) 118
    "!" (294) 119
    "++ --" (295) 122 123
    "SIZEOF" (296) 121
    "string" (297) 60 107 162
    "(" (298) 40 46 73 74 81 125 126 128 129 132 135 136 139 165
    ")" (299) 40 46 73 74 81 125 126 128 129 132 135 136 139 165
    ";" (300) 9 20 33 38 39 47 51 86 87 100 101 102 103 136 153 154 155
    "." (301) 110
    "," (302) 34 42 49 52 66 77 104
    "=" (303) 55 106 107
    ":" (304) 22 26 27 28 148 149 150 151 152
    "[" (305) 18 19 109
    "]" (306) 18 19 109
    "&" (307) 45 80
    "{" (308) 21 48 59 70 71 72 140 163 164
    "}" (309) 21 48 59 70 71 72 140 163 164
    "::" (310) 76
    ">>" (311) 154 156
    "<<" (312) 155 158
    LOWER_THAN_ELSE (313)


Nonterminals, with rules where they appear

    $accept (59)
        on left: 0
    program (60)
        on left: 1
        on right: 0
    global_declarations (61)
        on left: 2 3
        on right: 1 2
    global_declaration (62)
        on left: 4 5 6 7 8
        on right: 2
    typedef_declaration (63)
        on left: 9
        on right: 4
    typename (64)
        on left: 10 11
        on right: 9 33 41 42 43 51 75 77 78 86 87
    standard_type (65)
        on left: 12 13 14 15
        on right: 10 129
    dims (66)
        on left: 16 17
        on right: 9 16 36 44
    dim (67)
        on left: 18 19
        on right: 16
    class_declaration (68)
        on left: 20
        on right: 5
    class_body (69)
        on left: 21
        on right: 20
    parent (70)
        on left: 22 23
        on right: 21
    members_methods (71)
        on left: 24 25
        on right: 21 24
    access (72)
        on left: 26 27 28 29
        on right: 24 25
    member_or_method (73)
        on left: 30 31
        on right: 24 25
    member (74)
        on left: 32
        on right: 30
    var_declaration (75)
        on left: 33
        on right: 32
    variabledefs (76)
        on left: 34 35
        on right: 33 34 86 87
    variabledef (77)
        on left: 36
        on right: 34 35 54 79
    method (78)
        on left: 37
        on right: 31
    short_func_declaration (79)
        on left: 38 39
        on right: 37 68
    short_par_func_header (80)
        on left: 40
        on right: 38
    func_header_start (81)
        on left: 41
        on right: 40 46 74
    parameter_type_list (82)
        on left: 42 43
        on right: 40 42
    pass_dims (83)
        on left: 44 45
        on right: 42 43
    nopar_func_header (84)
        on left: 46
        on right: 39 72
    enum_declaration (85)
        on left: 47
        on right: 6
    enum_body (86)
        on left: 48
        on right: 47
    id_list (87)
        on left: 49 50
        on right: 48 49
    global_var_declaration (88)
        on left: 51
        on right: 7
    init_variabledefs (89)
        on left: 52 53
        on right: 51 52
    init_variabledef (90)
        on left: 54
        on right: 52 53
    initializer (91)
        on left: 55 56
        on right: 49 50 54
    init_value (92)
        on left: 57 58 59 60
        on right: 55 66 67
    sign (93)
        on left: 61 62
        on right: 57 58
    constant (94)
        on left: 63 64 65
        on right: 57 127 148 149 151 152
    init_values (95)
        on left: 66 67
        on right: 59 66
    func_declaration (96)
        on left: 68 69
        on right: 8
    full_func_declaration (97)
        on left: 70 71 72
        on right: 69
    full_par_func_header (98)
        on left: 73 74
        on right: 70
    class_func_header_start (99)
        on left: 75
        on right: 73 81
    func_class (100)
        on left: 76
        on right: 75
    parameter_list (101)
        on left: 77 78
        on right: 73 74 77
    pass_variabledef (102)
        on left: 79 80
        on right: 77 78
    nopar_class_func_header (103)
        on left: 81
        on right: 71
    decl_statements (104)
        on left: 82 83 84 85
        on right: 70 71 72 163 164
    declarations (105)
        on left: 86 87
        on right: 82 83 86 142 143
    decltype (106)
        on left: 88 89
        on right: 86 87 111
    statements (107)
        on left: 90 91
        on right: 82 84 90 149 150
    statement (108)
        on left: 92 93 94 95 96 97 98 99 100 101 102
        on right: 90 91 132 133 135 136 152
    expression_statement (109)
        on left: 103
        on right: 92
    general_expression (110)
        on left: 104 105
        on right: 103 104 109 126 128 130 132 135 137 139 161
    assignment (111)
        on left: 106 107 108
        on right: 105 106
    variable (112)
        on left: 109 110 111 112
        on right: 106 107 109 110 122 123 124 125 160
    expression (113)
        on left: 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129
        on right: 108 113 114 115 116 117 118 119 120 121
    expression_list (114)
        on left: 130 131
        on right: 125
    if_statement (115)
        on left: 132
        on right: 93
    if_tail (116)
        on left: 133 134
        on right: 132
    while_statement (117)
        on left: 135
        on right: 94
    for_statement (118)
        on left: 136
        on right: 95
    optexpr (119)
        on left: 137 138
        on right: 136 153
    switch_statement (120)
        on left: 139
        on right: 96
    switch_tail (121)
        on left: 140 141
        on right: 139
    decl_cases (122)
        on left: 142 143 144 145
        on right: 140
    casestatements (123)
        on left: 146 147
        on right: 142 144 146
    casestatement (124)
        on left: 148 149 150
        on right: 146 147 148
    single_casestatement (125)
        on left: 151 152
        on right: 141 151
    return_statement (126)
        on left: 153
        on right: 97
    io_statement (127)
        on left: 154 155
        on right: 98
    in_list (128)
        on left: 156 157
        on right: 154 156
    out_list (129)
        on left: 158 159
        on right: 155 158
    in_item (130)
        on left: 160
        on right: 156 157
    out_item (131)
        on left: 161 162
        on right: 158 159
    comp_statement (132)
        on left: 163
        on right: 99
    main_function (133)
        on left: 164
        on right: 1
    main_header (134)
        on left: 165
        on right: 164


State 0

    0 $accept: • program "eof"

    $default  reduce using rule 3 (global_declarations)

    program              go to state 1
    global_declarations  go to state 2


State 1

    0 $accept: program • "eof"

    "eof"  shift, and go to state 3


State 2

    1 program: global_declarations • main_function
    2 global_declarations: global_declarations • global_declaration

    "typedef"  shift, and go to state 4
    "char"     shift, and go to state 5
    "int"      shift, and go to state 6
    "float"    shift, and go to state 7
    "enum"     shift, and go to state 8
    "class"    shift, and go to state 9
    "void"     shift, and go to state 10
    "id"       shift, and go to state 11

    global_declaration       go to state 12
    typedef_declaration      go to state 13
    typename                 go to state 14
    standard_type            go to state 15
    class_declaration        go to state 16
    short_func_declaration   go to state 17
    short_par_func_header    go to state 18
    func_header_start        go to state 19
    nopar_func_header        go to state 20
    enum_declaration         go to state 21
    global_var_declaration   go to state 22
    func_declaration         go to state 23
    full_func_declaration    go to state 24
    full_par_func_header     go to state 25
    class_func_header_start  go to state 26
    nopar_class_func_header  go to state 27
    main_function            go to state 28
    main_header              go to state 29


State 3

    0 $accept: program "eof" •

    $default  accept


State 4

    9 typedef_declaration: "typedef" • typename "id" dims ";"

    "char"   shift, and go to state 5
    "int"    shift, and go to state 30
    "float"  shift, and go to state 7
    "void"   shift, and go to state 10
    "id"     shift, and go to state 11

    typename       go to state 31
    standard_type  go to state 15


State 5

   12 standard_type: "char" •

    $default  reduce using rule 12 (standard_type)


State 6

   13 standard_type: "int" •
  165 main_header: "int" • "main" "(" ")"

    "main"  shift, and go to state 32

    $default  reduce using rule 13 (standard_type)


State 7

   14 standard_type: "float" •

    $default  reduce using rule 14 (standard_type)


State 8

   47 enum_declaration: "enum" • "id" enum_body ";"

    "id"  shift, and go to state 33


State 9

   20 class_declaration: "class" • "id" class_body ";"

    "id"  shift, and go to state 34


State 10

   15 standard_type: "void" •

    $default  reduce using rule 15 (standard_type)


State 11

   11 typename: "id" •

    $default  reduce using rule 11 (typename)


State 12

    2 global_declarations: global_declarations global_declaration •

    $default  reduce using rule 2 (global_declarations)


State 13

    4 global_declaration: typedef_declaration •

    $default  reduce using rule 4 (global_declaration)


State 14

   41 func_header_start: typename • "id"
   51 global_var_declaration: typename • init_variabledefs ";"
   75 class_func_header_start: typename • func_class "id"

    "id"  shift, and go to state 35

    variabledef        go to state 36
    init_variabledefs  go to state 37
    init_variabledef   go to state 38
    func_class         go to state 39


State 15

   10 typename: standard_type •

    $default  reduce using rule 10 (typename)


State 16

    5 global_declaration: class_declaration •

    $default  reduce using rule 5 (global_declaration)


State 17

   68 func_declaration: short_func_declaration •

    $default  reduce using rule 68 (func_declaration)


State 18

   38 short_func_declaration: short_par_func_header • ";"

    ";"  shift, and go to state 40


State 19

   40 short_par_func_header: func_header_start • "(" parameter_type_list ")"
   46 nopar_func_header: func_header_start • "(" ")"
   74 full_par_func_header: func_header_start • "(" parameter_list ")"

    "("  shift, and go to state 41


State 20

   39 short_func_declaration: nopar_func_header • ";"
   72 full_func_declaration: nopar_func_header • "{" decl_statements "}"

    ";"  shift, and go to state 42
    "{"  shift, and go to state 43


State 21

    6 global_declaration: enum_declaration •

    $default  reduce using rule 6 (global_declaration)


State 22

    7 global_declaration: global_var_declaration •

    $default  reduce using rule 7 (global_declaration)


State 23

    8 global_declaration: func_declaration •

    $default  reduce using rule 8 (global_declaration)


State 24

   69 func_declaration: full_func_declaration •

    $default  reduce using rule 69 (func_declaration)


State 25

   70 full_func_declaration: full_par_func_header • "{" decl_statements "}"

    "{"  shift, and go to state 44


State 26

   73 full_par_func_header: class_func_header_start • "(" parameter_list ")"
   81 nopar_class_func_header: class_func_header_start • "(" ")"

    "("  shift, and go to state 45


State 27

   71 full_func_declaration: nopar_class_func_header • "{" decl_statements "}"

    "{"  shift, and go to state 46


State 28

    1 program: global_declarations main_function •

    $default  reduce using rule 1 (program)


State 29

  164 main_function: main_header • "{" decl_statements "}"

    "{"  shift, and go to state 47


State 30

   13 standard_type: "int" •

    $default  reduce using rule 13 (standard_type)


State 31

    9 typedef_declaration: "typedef" typename • "id" dims ";"

    "id"  shift, and go to state 48


State 32

  165 main_header: "int" "main" • "(" ")"

    "("  shift, and go to state 49


State 33

   47 enum_declaration: "enum" "id" • enum_body ";"

    "{"  shift, and go to state 50

    enum_body  go to state 51


State 34

   20 class_declaration: "class" "id" • class_body ";"

    ":"  shift, and go to state 52

    $default  reduce using rule 23 (parent)

    class_body  go to state 53
    parent      go to state 54


State 35

   36 variabledef: "id" • dims
   41 func_header_start: typename "id" •
   76 func_class: "id" • "::"

    "::"  shift, and go to state 55

    "("       reduce using rule 41 (func_header_start)
    $default  reduce using rule 17 (dims)

    dims  go to state 56


State 36

   54 init_variabledef: variabledef • initializer

    "="  shift, and go to state 57

    $default  reduce using rule 56 (initializer)

    initializer  go to state 58


State 37

   51 global_var_declaration: typename init_variabledefs • ";"
   52 init_variabledefs: init_variabledefs • "," init_variabledef

    ";"  shift, and go to state 59
    ","  shift, and go to state 60


State 38

   53 init_variabledefs: init_variabledef •

    $default  reduce using rule 53 (init_variabledefs)


State 39

   75 class_func_header_start: typename func_class • "id"

    "id"  shift, and go to state 61


State 40

   38 short_func_declaration: short_par_func_header ";" •

    $default  reduce using rule 38 (short_func_declaration)


State 41

   40 short_par_func_header: func_header_start "(" • parameter_type_list ")"
   46 nopar_func_header: func_header_start "(" • ")"
   74 full_par_func_header: func_header_start "(" • parameter_list ")"

    "char"   shift, and go to state 5
    "int"    shift, and go to state 30
    "float"  shift, and go to state 7
    "void"   shift, and go to state 10
    "id"     shift, and go to state 11
    ")"      shift, and go to state 62

    typename             go to state 63
    standard_type        go to state 15
    parameter_type_list  go to state 64
    parameter_list       go to state 65


State 42

   39 short_func_declaration: nopar_func_header ";" •

    $default  reduce using rule 39 (short_func_declaration)


State 43

   72 full_func_declaration: nopar_func_header "{" • decl_statements "}"

    "static"        shift, and go to state 66
    "continue"      shift, and go to state 67
    "break"         shift, and go to state 68
    "this"          shift, and go to state 69
    "if"            shift, and go to state 70
    "while"         shift, and go to state 71
    "for"           shift, and go to state 72
    "switch"        shift, and go to state 73
    "return"        shift, and go to state 74
    "cin"           shift, and go to state 75
    "cout"          shift, and go to state 76
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85
    ";"             shift, and go to state 86
    "{"             shift, and go to state 87

    "}"       reduce using rule 85 (decl_statements)
    $default  reduce using rule 89 (decltype)

    constant              go to state 88
    decl_statements       go to state 89
    declarations          go to state 90
    decltype              go to state 91
    statements            go to state 92
    statement             go to state 93
    expression_statement  go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    variable              go to state 97
    expression            go to state 98
    if_statement          go to state 99
    while_statement       go to state 100
    for_statement         go to state 101
    switch_statement      go to state 102
    return_statement      go to state 103
    io_statement          go to state 104
    comp_statement        go to state 105


State 44

   70 full_func_declaration: full_par_func_header "{" • decl_statements "}"

    "static"        shift, and go to state 66
    "continue"      shift, and go to state 67
    "break"         shift, and go to state 68
    "this"          shift, and go to state 69
    "if"            shift, and go to state 70
    "while"         shift, and go to state 71
    "for"           shift, and go to state 72
    "switch"        shift, and go to state 73
    "return"        shift, and go to state 74
    "cin"           shift, and go to state 75
    "cout"          shift, and go to state 76
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85
    ";"             shift, and go to state 86
    "{"             shift, and go to state 87

    "}"       reduce using rule 85 (decl_statements)
    $default  reduce using rule 89 (decltype)

    constant              go to state 88
    decl_statements       go to state 106
    declarations          go to state 90
    decltype              go to state 91
    statements            go to state 92
    statement             go to state 93
    expression_statement  go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    variable              go to state 97
    expression            go to state 98
    if_statement          go to state 99
    while_statement       go to state 100
    for_statement         go to state 101
    switch_statement      go to state 102
    return_statement      go to state 103
    io_statement          go to state 104
    comp_statement        go to state 105


State 45

   73 full_par_func_header: class_func_header_start "(" • parameter_list ")"
   81 nopar_class_func_header: class_func_header_start "(" • ")"

    "char"   shift, and go to state 5
    "int"    shift, and go to state 30
    "float"  shift, and go to state 7
    "void"   shift, and go to state 10
    "id"     shift, and go to state 11
    ")"      shift, and go to state 107

    typename        go to state 108
    standard_type   go to state 15
    parameter_list  go to state 109


State 46

   71 full_func_declaration: nopar_class_func_header "{" • decl_statements "}"

    "static"        shift, and go to state 66
    "continue"      shift, and go to state 67
    "break"         shift, and go to state 68
    "this"          shift, and go to state 69
    "if"            shift, and go to state 70
    "while"         shift, and go to state 71
    "for"           shift, and go to state 72
    "switch"        shift, and go to state 73
    "return"        shift, and go to state 74
    "cin"           shift, and go to state 75
    "cout"          shift, and go to state 76
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85
    ";"             shift, and go to state 86
    "{"             shift, and go to state 87

    "}"       reduce using rule 85 (decl_statements)
    $default  reduce using rule 89 (decltype)

    constant              go to state 88
    decl_statements       go to state 110
    declarations          go to state 90
    decltype              go to state 91
    statements            go to state 92
    statement             go to state 93
    expression_statement  go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    variable              go to state 97
    expression            go to state 98
    if_statement          go to state 99
    while_statement       go to state 100
    for_statement         go to state 101
    switch_statement      go to state 102
    return_statement      go to state 103
    io_statement          go to state 104
    comp_statement        go to state 105


State 47

  164 main_function: main_header "{" • decl_statements "}"

    "static"        shift, and go to state 66
    "continue"      shift, and go to state 67
    "break"         shift, and go to state 68
    "this"          shift, and go to state 69
    "if"            shift, and go to state 70
    "while"         shift, and go to state 71
    "for"           shift, and go to state 72
    "switch"        shift, and go to state 73
    "return"        shift, and go to state 74
    "cin"           shift, and go to state 75
    "cout"          shift, and go to state 76
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85
    ";"             shift, and go to state 86
    "{"             shift, and go to state 87

    "}"       reduce using rule 85 (decl_statements)
    $default  reduce using rule 89 (decltype)

    constant              go to state 88
    decl_statements       go to state 111
    declarations          go to state 90
    decltype              go to state 91
    statements            go to state 92
    statement             go to state 93
    expression_statement  go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    variable              go to state 97
    expression            go to state 98
    if_statement          go to state 99
    while_statement       go to state 100
    for_statement         go to state 101
    switch_statement      go to state 102
    return_statement      go to state 103
    io_statement          go to state 104
    comp_statement        go to state 105


State 48

    9 typedef_declaration: "typedef" typename "id" • dims ";"

    $default  reduce using rule 17 (dims)

    dims  go to state 112


State 49

  165 main_header: "int" "main" "(" • ")"

    ")"  shift, and go to state 113


State 50

   48 enum_body: "{" • id_list "}"

    "id"  shift, and go to state 114

    id_list  go to state 115


State 51

   47 enum_declaration: "enum" "id" enum_body • ";"

    ";"  shift, and go to state 116


State 52

   22 parent: ":" • "id"

    "id"  shift, and go to state 117


State 53

   20 class_declaration: "class" "id" class_body • ";"

    ";"  shift, and go to state 118


State 54

   21 class_body: parent • "{" members_methods "}"

    "{"  shift, and go to state 119


State 55

   76 func_class: "id" "::" •

    $default  reduce using rule 76 (func_class)


State 56

   16 dims: dims • dim
   36 variabledef: "id" dims •

    "["  shift, and go to state 120

    $default  reduce using rule 36 (variabledef)

    dim  go to state 121


State 57

   55 initializer: "=" • init_value

    "+ -"     shift, and go to state 122
    "string"  shift, and go to state 123
    "{"       shift, and go to state 124

    $default  reduce using rule 62 (sign)

    init_value  go to state 125
    sign        go to state 126


State 58

   54 init_variabledef: variabledef initializer •

    $default  reduce using rule 54 (init_variabledef)


State 59

   51 global_var_declaration: typename init_variabledefs ";" •

    $default  reduce using rule 51 (global_var_declaration)


State 60

   52 init_variabledefs: init_variabledefs "," • init_variabledef

    "id"  shift, and go to state 127

    variabledef       go to state 36
    init_variabledef  go to state 128


State 61

   75 class_func_header_start: typename func_class "id" •

    $default  reduce using rule 75 (class_func_header_start)


State 62

   46 nopar_func_header: func_header_start "(" ")" •

    $default  reduce using rule 46 (nopar_func_header)


State 63

   43 parameter_type_list: typename • pass_dims
   78 parameter_list: typename • pass_variabledef

    "id"  shift, and go to state 127
    "&"   shift, and go to state 129

    $default  reduce using rule 17 (dims)

    dims              go to state 130
    variabledef       go to state 131
    pass_dims         go to state 132
    pass_variabledef  go to state 133


State 64

   40 short_par_func_header: func_header_start "(" parameter_type_list • ")"
   42 parameter_type_list: parameter_type_list • "," typename pass_dims

    ")"  shift, and go to state 134
    ","  shift, and go to state 135


State 65

   74 full_par_func_header: func_header_start "(" parameter_list • ")"
   77 parameter_list: parameter_list • "," typename pass_variabledef

    ")"  shift, and go to state 136
    ","  shift, and go to state 137


State 66

   88 decltype: "static" •

    $default  reduce using rule 88 (decltype)


State 67

  100 statement: "continue" • ";"

    ";"  shift, and go to state 138


State 68

  101 statement: "break" • ";"

    ";"  shift, and go to state 139


State 69

  112 variable: "this" •

    $default  reduce using rule 112 (variable)


State 70

  132 if_statement: "if" • "(" general_expression ")" statement if_tail

    "("  shift, and go to state 140


State 71

  135 while_statement: "while" • "(" general_expression ")" statement

    "("  shift, and go to state 141


State 72

  136 for_statement: "for" • "(" optexpr ";" optexpr ";" optexpr ")" statement

    "("  shift, and go to state 142


State 73

  139 switch_statement: "switch" • "(" general_expression ")" switch_tail

    "("  shift, and go to state 143


State 74

  153 return_statement: "return" • optexpr ";"

    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85

    ";"       reduce using rule 138 (optexpr)
    $default  reduce using rule 89 (decltype)

    constant            go to state 88
    decltype            go to state 144
    general_expression  go to state 145
    assignment          go to state 96
    variable            go to state 97
    expression          go to state 98
    optexpr             go to state 146


State 75

  154 io_statement: "cin" • ">>" in_list ";"

    ">>"  shift, and go to state 147


State 76

  155 io_statement: "cout" • "<<" out_list ";"

    "<<"  shift, and go to state 148


State 77

  126 expression: "length" • "(" general_expression ")"

    "("  shift, and go to state 149


State 78

   64 constant: "int const" •

    $default  reduce using rule 64 (constant)


State 79

   65 constant: "double const" •

    $default  reduce using rule 65 (constant)


State 80

   63 constant: "char const" •

    $default  reduce using rule 63 (constant)


State 81

  120 expression: "+ -" • expression

    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85

    $default  reduce using rule 89 (decltype)

    constant    go to state 88
    decltype    go to state 144
    variable    go to state 150
    expression  go to state 151


State 82

  119 expression: "!" • expression

    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85

    $default  reduce using rule 89 (decltype)

    constant    go to state 88
    decltype    go to state 144
    variable    go to state 150
    expression  go to state 152


State 83

  122 expression: "++ --" • variable

    "static"  shift, and go to state 66
    "this"    shift, and go to state 69

    $default  reduce using rule 89 (decltype)

    decltype  go to state 144
    variable  go to state 153


State 84

  121 expression: "SIZEOF" • expression

    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85

    $default  reduce using rule 89 (decltype)

    constant    go to state 88
    decltype    go to state 144
    variable    go to state 150
    expression  go to state 154


State 85

  128 expression: "(" • general_expression ")"
  129           | "(" • standard_type ")"

    "char"          shift, and go to state 5
    "int"           shift, and go to state 30
    "float"         shift, and go to state 7
    "void"          shift, and go to state 10
    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85

    $default  reduce using rule 89 (decltype)

    standard_type       go to state 155
    constant            go to state 88
    decltype            go to state 144
    general_expression  go to state 156
    assignment          go to state 96
    variable            go to state 97
    expression          go to state 98


State 86

  102 statement: ";" •

    $default  reduce using rule 102 (statement)


State 87

  163 comp_statement: "{" • decl_statements "}"

    "static"        shift, and go to state 66
    "continue"      shift, and go to state 67
    "break"         shift, and go to state 68
    "this"          shift, and go to state 69
    "if"            shift, and go to state 70
    "while"         shift, and go to state 71
    "for"           shift, and go to state 72
    "switch"        shift, and go to state 73
    "return"        shift, and go to state 74
    "cin"           shift, and go to state 75
    "cout"          shift, and go to state 76
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85
    ";"             shift, and go to state 86
    "{"             shift, and go to state 87

    "}"       reduce using rule 85 (decl_statements)
    $default  reduce using rule 89 (decltype)

    constant              go to state 88
    decl_statements       go to state 157
    declarations          go to state 90
    decltype              go to state 91
    statements            go to state 92
    statement             go to state 93
    expression_statement  go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    variable              go to state 97
    expression            go to state 98
    if_statement          go to state 99
    while_statement       go to state 100
    for_statement         go to state 101
    switch_statement      go to state 102
    return_statement      go to state 103
    io_statement          go to state 104
    comp_statement        go to state 105


State 88

  127 expression: constant •

    $default  reduce using rule 127 (expression)


State 89

   72 full_func_declaration: nopar_func_header "{" decl_statements • "}"

    "}"  shift, and go to state 158


State 90

   82 decl_statements: declarations • statements
   83                | declarations •
   86 declarations: declarations • decltype typename variabledefs ";"

    "static"        shift, and go to state 66
    "continue"      shift, and go to state 67
    "break"         shift, and go to state 68
    "this"          shift, and go to state 69
    "if"            shift, and go to state 70
    "while"         shift, and go to state 71
    "for"           shift, and go to state 72
    "switch"        shift, and go to state 73
    "return"        shift, and go to state 74
    "cin"           shift, and go to state 75
    "cout"          shift, and go to state 76
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85
    ";"             shift, and go to state 86
    "{"             shift, and go to state 87

    "}"       reduce using rule 83 (decl_statements)
    $default  reduce using rule 89 (decltype)

    constant              go to state 88
    decltype              go to state 159
    statements            go to state 160
    statement             go to state 93
    expression_statement  go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    variable              go to state 97
    expression            go to state 98
    if_statement          go to state 99
    while_statement       go to state 100
    for_statement         go to state 101
    switch_statement      go to state 102
    return_statement      go to state 103
    io_statement          go to state 104
    comp_statement        go to state 105


State 91

   87 declarations: decltype • typename variabledefs ";"
  111 variable: decltype • "id"

    "char"   shift, and go to state 5
    "int"    shift, and go to state 30
    "float"  shift, and go to state 7
    "void"   shift, and go to state 10
    "id"     shift, and go to state 161

    typename       go to state 162
    standard_type  go to state 15


State 92

   84 decl_statements: statements •
   90 statements: statements • statement

    "static"        shift, and go to state 66
    "continue"      shift, and go to state 67
    "break"         shift, and go to state 68
    "this"          shift, and go to state 69
    "if"            shift, and go to state 70
    "while"         shift, and go to state 71
    "for"           shift, and go to state 72
    "switch"        shift, and go to state 73
    "return"        shift, and go to state 74
    "cin"           shift, and go to state 75
    "cout"          shift, and go to state 76
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85
    ";"             shift, and go to state 86
    "{"             shift, and go to state 87

    "id"      reduce using rule 89 (decltype)
    $default  reduce using rule 84 (decl_statements)

    constant              go to state 88
    decltype              go to state 144
    statement             go to state 163
    expression_statement  go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    variable              go to state 97
    expression            go to state 98
    if_statement          go to state 99
    while_statement       go to state 100
    for_statement         go to state 101
    switch_statement      go to state 102
    return_statement      go to state 103
    io_statement          go to state 104
    comp_statement        go to state 105


State 93

   91 statements: statement •

    $default  reduce using rule 91 (statements)


State 94

   92 statement: expression_statement •

    $default  reduce using rule 92 (statement)


State 95

  103 expression_statement: general_expression • ";"
  104 general_expression: general_expression • "," general_expression

    ";"  shift, and go to state 164
    ","  shift, and go to state 165


State 96

  105 general_expression: assignment •

    $default  reduce using rule 105 (general_expression)


State 97

  106 assignment: variable • "=" assignment
  107           | variable • "=" "string"
  109 variable: variable • "[" general_expression "]"
  110         | variable • "." "id"
  123 expression: variable • "++ --"
  124           | variable •
  125           | variable • "(" expression_list ")"

    "++ --"  shift, and go to state 166
    "("      shift, and go to state 167
    "."      shift, and go to state 168
    "="      shift, and go to state 169
    "["      shift, and go to state 170

    $default  reduce using rule 124 (expression)


State 98

  108 assignment: expression •
  113 expression: expression • "||" expression
  114           | expression • "&&" expression
  115           | expression • "== !=" expression
  116           | expression • "< >= < <=" expression
  117           | expression • "+ -" expression
  118           | expression • "* / %" expression

    "||"         shift, and go to state 171
    "&&"         shift, and go to state 172
    "== !="      shift, and go to state 173
    "< >= < <="  shift, and go to state 174
    "+ -"        shift, and go to state 175
    "* / %"      shift, and go to state 176

    $default  reduce using rule 108 (assignment)


State 99

   93 statement: if_statement •

    $default  reduce using rule 93 (statement)


State 100

   94 statement: while_statement •

    $default  reduce using rule 94 (statement)


State 101

   95 statement: for_statement •

    $default  reduce using rule 95 (statement)


State 102

   96 statement: switch_statement •

    $default  reduce using rule 96 (statement)


State 103

   97 statement: return_statement •

    $default  reduce using rule 97 (statement)


State 104

   98 statement: io_statement •

    $default  reduce using rule 98 (statement)


State 105

   99 statement: comp_statement •

    $default  reduce using rule 99 (statement)


State 106

   70 full_func_declaration: full_par_func_header "{" decl_statements • "}"

    "}"  shift, and go to state 177


State 107

   81 nopar_class_func_header: class_func_header_start "(" ")" •

    $default  reduce using rule 81 (nopar_class_func_header)


State 108

   78 parameter_list: typename • pass_variabledef

    "id"  shift, and go to state 127
    "&"   shift, and go to state 178

    variabledef       go to state 131
    pass_variabledef  go to state 133


State 109

   73 full_par_func_header: class_func_header_start "(" parameter_list • ")"
   77 parameter_list: parameter_list • "," typename pass_variabledef

    ")"  shift, and go to state 179
    ","  shift, and go to state 137


State 110

   71 full_func_declaration: nopar_class_func_header "{" decl_statements • "}"

    "}"  shift, and go to state 180


State 111

  164 main_function: main_header "{" decl_statements • "}"

    "}"  shift, and go to state 181


State 112

    9 typedef_declaration: "typedef" typename "id" dims • ";"
   16 dims: dims • dim

    ";"  shift, and go to state 182
    "["  shift, and go to state 120

    dim  go to state 121


State 113

  165 main_header: "int" "main" "(" ")" •

    $default  reduce using rule 165 (main_header)


State 114

   50 id_list: "id" • initializer

    "="  shift, and go to state 57

    $default  reduce using rule 56 (initializer)

    initializer  go to state 183


State 115

   48 enum_body: "{" id_list • "}"
   49 id_list: id_list • "," "id" initializer

    ","  shift, and go to state 184
    "}"  shift, and go to state 185


State 116

   47 enum_declaration: "enum" "id" enum_body ";" •

    $default  reduce using rule 47 (enum_declaration)


State 117

   22 parent: ":" "id" •

    $default  reduce using rule 22 (parent)


State 118

   20 class_declaration: "class" "id" class_body ";" •

    $default  reduce using rule 20 (class_declaration)


State 119

   21 class_body: parent "{" • members_methods "}"

    "private"    shift, and go to state 186
    "protected"  shift, and go to state 187
    "public"     shift, and go to state 188

    $default  reduce using rule 29 (access)

    members_methods  go to state 189
    access           go to state 190


State 120

   18 dim: "[" • "int const" "]"
   19    | "[" • "]"

    "int const"  shift, and go to state 191
    "]"          shift, and go to state 192


State 121

   16 dims: dims dim •

    $default  reduce using rule 16 (dims)


State 122

   61 sign: "+ -" •

    $default  reduce using rule 61 (sign)


State 123

   60 init_value: "string" •

    $default  reduce using rule 60 (init_value)


State 124

   59 init_value: "{" • init_values "}"

    "+ -"     shift, and go to state 122
    "string"  shift, and go to state 123
    "{"       shift, and go to state 124

    $default  reduce using rule 62 (sign)

    init_value   go to state 193
    sign         go to state 126
    init_values  go to state 194


State 125

   55 initializer: "=" init_value •

    $default  reduce using rule 55 (initializer)


State 126

   57 init_value: sign • constant
   58           | sign • "id"

    "id"            shift, and go to state 195
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80

    constant  go to state 196


State 127

   36 variabledef: "id" • dims

    $default  reduce using rule 17 (dims)

    dims  go to state 56


State 128

   52 init_variabledefs: init_variabledefs "," init_variabledef •

    $default  reduce using rule 52 (init_variabledefs)


State 129

   45 pass_dims: "&" •
   80 pass_variabledef: "&" • "id"

    "id"  shift, and go to state 197

    $default  reduce using rule 45 (pass_dims)


State 130

   16 dims: dims • dim
   44 pass_dims: dims •

    "["  shift, and go to state 120

    $default  reduce using rule 44 (pass_dims)

    dim  go to state 121


State 131

   79 pass_variabledef: variabledef •

    $default  reduce using rule 79 (pass_variabledef)


State 132

   43 parameter_type_list: typename pass_dims •

    $default  reduce using rule 43 (parameter_type_list)


State 133

   78 parameter_list: typename pass_variabledef •

    $default  reduce using rule 78 (parameter_list)


State 134

   40 short_par_func_header: func_header_start "(" parameter_type_list ")" •

    $default  reduce using rule 40 (short_par_func_header)


State 135

   42 parameter_type_list: parameter_type_list "," • typename pass_dims

    "char"   shift, and go to state 5
    "int"    shift, and go to state 30
    "float"  shift, and go to state 7
    "void"   shift, and go to state 10
    "id"     shift, and go to state 11

    typename       go to state 198
    standard_type  go to state 15


State 136

   74 full_par_func_header: func_header_start "(" parameter_list ")" •

    $default  reduce using rule 74 (full_par_func_header)


State 137

   77 parameter_list: parameter_list "," • typename pass_variabledef

    "char"   shift, and go to state 5
    "int"    shift, and go to state 30
    "float"  shift, and go to state 7
    "void"   shift, and go to state 10
    "id"     shift, and go to state 11

    typename       go to state 199
    standard_type  go to state 15


State 138

  100 statement: "continue" ";" •

    $default  reduce using rule 100 (statement)


State 139

  101 statement: "break" ";" •

    $default  reduce using rule 101 (statement)


State 140

  132 if_statement: "if" "(" • general_expression ")" statement if_tail

    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85

    $default  reduce using rule 89 (decltype)

    constant            go to state 88
    decltype            go to state 144
    general_expression  go to state 200
    assignment          go to state 96
    variable            go to state 97
    expression          go to state 98


State 141

  135 while_statement: "while" "(" • general_expression ")" statement

    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85

    $default  reduce using rule 89 (decltype)

    constant            go to state 88
    decltype            go to state 144
    general_expression  go to state 201
    assignment          go to state 96
    variable            go to state 97
    expression          go to state 98


State 142

  136 for_statement: "for" "(" • optexpr ";" optexpr ";" optexpr ")" statement

    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85

    ";"       reduce using rule 138 (optexpr)
    $default  reduce using rule 89 (decltype)

    constant            go to state 88
    decltype            go to state 144
    general_expression  go to state 145
    assignment          go to state 96
    variable            go to state 97
    expression          go to state 98
    optexpr             go to state 202


State 143

  139 switch_statement: "switch" "(" • general_expression ")" switch_tail

    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85

    $default  reduce using rule 89 (decltype)

    constant            go to state 88
    decltype            go to state 144
    general_expression  go to state 203
    assignment          go to state 96
    variable            go to state 97
    expression          go to state 98


State 144

  111 variable: decltype • "id"

    "id"  shift, and go to state 204


State 145

  104 general_expression: general_expression • "," general_expression
  137 optexpr: general_expression •

    ","  shift, and go to state 165

    $default  reduce using rule 137 (optexpr)


State 146

  153 return_statement: "return" optexpr • ";"

    ";"  shift, and go to state 205


State 147

  154 io_statement: "cin" ">>" • in_list ";"

    "static"  shift, and go to state 66
    "this"    shift, and go to state 69

    $default  reduce using rule 89 (decltype)

    decltype  go to state 144
    variable  go to state 206
    in_list   go to state 207
    in_item   go to state 208


State 148

  155 io_statement: "cout" "<<" • out_list ";"

    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "string"        shift, and go to state 209
    "("             shift, and go to state 85

    $default  reduce using rule 89 (decltype)

    constant            go to state 88
    decltype            go to state 144
    general_expression  go to state 210
    assignment          go to state 96
    variable            go to state 97
    expression          go to state 98
    out_list            go to state 211
    out_item            go to state 212


State 149

  126 expression: "length" "(" • general_expression ")"

    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85

    $default  reduce using rule 89 (decltype)

    constant            go to state 88
    decltype            go to state 144
    general_expression  go to state 213
    assignment          go to state 96
    variable            go to state 97
    expression          go to state 98


State 150

  109 variable: variable • "[" general_expression "]"
  110         | variable • "." "id"
  123 expression: variable • "++ --"
  124           | variable •
  125           | variable • "(" expression_list ")"

    "++ --"  shift, and go to state 166
    "("      shift, and go to state 167
    "."      shift, and go to state 168
    "["      shift, and go to state 170

    $default  reduce using rule 124 (expression)


State 151

  113 expression: expression • "||" expression
  114           | expression • "&&" expression
  115           | expression • "== !=" expression
  116           | expression • "< >= < <=" expression
  117           | expression • "+ -" expression
  118           | expression • "* / %" expression
  120           | "+ -" expression •

    "* / %"  shift, and go to state 176

    $default  reduce using rule 120 (expression)


State 152

  113 expression: expression • "||" expression
  114           | expression • "&&" expression
  115           | expression • "== !=" expression
  116           | expression • "< >= < <=" expression
  117           | expression • "+ -" expression
  118           | expression • "* / %" expression
  119           | "!" expression •

    $default  reduce using rule 119 (expression)


State 153

  109 variable: variable • "[" general_expression "]"
  110         | variable • "." "id"
  122 expression: "++ --" variable •

    "."  shift, and go to state 168
    "["  shift, and go to state 170

    $default  reduce using rule 122 (expression)


State 154

  113 expression: expression • "||" expression
  114           | expression • "&&" expression
  115           | expression • "== !=" expression
  116           | expression • "< >= < <=" expression
  117           | expression • "+ -" expression
  118           | expression • "* / %" expression
  121           | "SIZEOF" expression •

    "||"         shift, and go to state 171
    "&&"         shift, and go to state 172
    "== !="      shift, and go to state 173
    "< >= < <="  shift, and go to state 174
    "+ -"        shift, and go to state 175
    "* / %"      shift, and go to state 176

    "||"         [reduce using rule 121 (expression)]
    "&&"         [reduce using rule 121 (expression)]
    "== !="      [reduce using rule 121 (expression)]
    "< >= < <="  [reduce using rule 121 (expression)]
    "+ -"        [reduce using rule 121 (expression)]
    "* / %"      [reduce using rule 121 (expression)]
    $default     reduce using rule 121 (expression)


State 155

  129 expression: "(" standard_type • ")"

    ")"  shift, and go to state 214


State 156

  104 general_expression: general_expression • "," general_expression
  128 expression: "(" general_expression • ")"

    ")"  shift, and go to state 215
    ","  shift, and go to state 165


State 157

  163 comp_statement: "{" decl_statements • "}"

    "}"  shift, and go to state 216


State 158

   72 full_func_declaration: nopar_func_header "{" decl_statements "}" •

    $default  reduce using rule 72 (full_func_declaration)


State 159

   86 declarations: declarations decltype • typename variabledefs ";"
  111 variable: decltype • "id"

    "char"   shift, and go to state 5
    "int"    shift, and go to state 30
    "float"  shift, and go to state 7
    "void"   shift, and go to state 10
    "id"     shift, and go to state 161

    typename       go to state 217
    standard_type  go to state 15


State 160

   82 decl_statements: declarations statements •
   90 statements: statements • statement

    "static"        shift, and go to state 66
    "continue"      shift, and go to state 67
    "break"         shift, and go to state 68
    "this"          shift, and go to state 69
    "if"            shift, and go to state 70
    "while"         shift, and go to state 71
    "for"           shift, and go to state 72
    "switch"        shift, and go to state 73
    "return"        shift, and go to state 74
    "cin"           shift, and go to state 75
    "cout"          shift, and go to state 76
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85
    ";"             shift, and go to state 86
    "{"             shift, and go to state 87

    "id"      reduce using rule 89 (decltype)
    $default  reduce using rule 82 (decl_statements)

    constant              go to state 88
    decltype              go to state 144
    statement             go to state 163
    expression_statement  go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    variable              go to state 97
    expression            go to state 98
    if_statement          go to state 99
    while_statement       go to state 100
    for_statement         go to state 101
    switch_statement      go to state 102
    return_statement      go to state 103
    io_statement          go to state 104
    comp_statement        go to state 105


State 161

   11 typename: "id" •
  111 variable: decltype "id" •

    "id"      reduce using rule 11 (typename)
    $default  reduce using rule 111 (variable)


State 162

   87 declarations: decltype typename • variabledefs ";"

    "id"  shift, and go to state 127

    variabledefs  go to state 218
    variabledef   go to state 219


State 163

   90 statements: statements statement •

    $default  reduce using rule 90 (statements)


State 164

  103 expression_statement: general_expression ";" •

    $default  reduce using rule 103 (expression_statement)


State 165

  104 general_expression: general_expression "," • general_expression

    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85

    $default  reduce using rule 89 (decltype)

    constant            go to state 88
    decltype            go to state 144
    general_expression  go to state 220
    assignment          go to state 96
    variable            go to state 97
    expression          go to state 98


State 166

  123 expression: variable "++ --" •

    $default  reduce using rule 123 (expression)


State 167

  125 expression: variable "(" • expression_list ")"

    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85

    ")"       reduce using rule 131 (expression_list)
    $default  reduce using rule 89 (decltype)

    constant            go to state 88
    decltype            go to state 144
    general_expression  go to state 221
    assignment          go to state 96
    variable            go to state 97
    expression          go to state 98
    expression_list     go to state 222


State 168

  110 variable: variable "." • "id"

    "id"  shift, and go to state 223


State 169

  106 assignment: variable "=" • assignment
  107           | variable "=" • "string"

    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "string"        shift, and go to state 224
    "("             shift, and go to state 85

    $default  reduce using rule 89 (decltype)

    constant    go to state 88
    decltype    go to state 144
    assignment  go to state 225
    variable    go to state 97
    expression  go to state 98


State 170

  109 variable: variable "[" • general_expression "]"

    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85

    $default  reduce using rule 89 (decltype)

    constant            go to state 88
    decltype            go to state 144
    general_expression  go to state 226
    assignment          go to state 96
    variable            go to state 97
    expression          go to state 98


State 171

  113 expression: expression "||" • expression

    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85

    $default  reduce using rule 89 (decltype)

    constant    go to state 88
    decltype    go to state 144
    variable    go to state 150
    expression  go to state 227


State 172

  114 expression: expression "&&" • expression

    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85

    $default  reduce using rule 89 (decltype)

    constant    go to state 88
    decltype    go to state 144
    variable    go to state 150
    expression  go to state 228


State 173

  115 expression: expression "== !=" • expression

    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85

    $default  reduce using rule 89 (decltype)

    constant    go to state 88
    decltype    go to state 144
    variable    go to state 150
    expression  go to state 229


State 174

  116 expression: expression "< >= < <=" • expression

    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85

    $default  reduce using rule 89 (decltype)

    constant    go to state 88
    decltype    go to state 144
    variable    go to state 150
    expression  go to state 230


State 175

  117 expression: expression "+ -" • expression

    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85

    $default  reduce using rule 89 (decltype)

    constant    go to state 88
    decltype    go to state 144
    variable    go to state 150
    expression  go to state 231


State 176

  118 expression: expression "* / %" • expression

    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85

    $default  reduce using rule 89 (decltype)

    constant    go to state 88
    decltype    go to state 144
    variable    go to state 150
    expression  go to state 232


State 177

   70 full_func_declaration: full_par_func_header "{" decl_statements "}" •

    $default  reduce using rule 70 (full_func_declaration)


State 178

   80 pass_variabledef: "&" • "id"

    "id"  shift, and go to state 197


State 179

   73 full_par_func_header: class_func_header_start "(" parameter_list ")" •

    $default  reduce using rule 73 (full_par_func_header)


State 180

   71 full_func_declaration: nopar_class_func_header "{" decl_statements "}" •

    $default  reduce using rule 71 (full_func_declaration)


State 181

  164 main_function: main_header "{" decl_statements "}" •

    $default  reduce using rule 164 (main_function)


State 182

    9 typedef_declaration: "typedef" typename "id" dims ";" •

    $default  reduce using rule 9 (typedef_declaration)


State 183

   50 id_list: "id" initializer •

    $default  reduce using rule 50 (id_list)


State 184

   49 id_list: id_list "," • "id" initializer

    "id"  shift, and go to state 233


State 185

   48 enum_body: "{" id_list "}" •

    $default  reduce using rule 48 (enum_body)


State 186

   26 access: "private" • ":"

    ":"  shift, and go to state 234


State 187

   27 access: "protected" • ":"

    ":"  shift, and go to state 235


State 188

   28 access: "public" • ":"

    ":"  shift, and go to state 236


State 189

   21 class_body: parent "{" members_methods • "}"
   24 members_methods: members_methods • access member_or_method

    "private"    shift, and go to state 186
    "protected"  shift, and go to state 187
    "public"     shift, and go to state 188
    "}"          shift, and go to state 237

    $default  reduce using rule 29 (access)

    access  go to state 238


State 190

   25 members_methods: access • member_or_method

    "char"   shift, and go to state 5
    "int"    shift, and go to state 30
    "float"  shift, and go to state 7
    "void"   shift, and go to state 10
    "id"     shift, and go to state 11

    typename                go to state 239
    standard_type           go to state 15
    member_or_method        go to state 240
    member                  go to state 241
    var_declaration         go to state 242
    method                  go to state 243
    short_func_declaration  go to state 244
    short_par_func_header   go to state 18
    func_header_start       go to state 245
    nopar_func_header       go to state 246


State 191

   18 dim: "[" "int const" • "]"

    "]"  shift, and go to state 247


State 192

   19 dim: "[" "]" •

    $default  reduce using rule 19 (dim)


State 193

   67 init_values: init_value •

    $default  reduce using rule 67 (init_values)


State 194

   59 init_value: "{" init_values • "}"
   66 init_values: init_values • "," init_value

    ","  shift, and go to state 248
    "}"  shift, and go to state 249


State 195

   58 init_value: sign "id" •

    $default  reduce using rule 58 (init_value)


State 196

   57 init_value: sign constant •

    $default  reduce using rule 57 (init_value)


State 197

   80 pass_variabledef: "&" "id" •

    $default  reduce using rule 80 (pass_variabledef)


State 198

   42 parameter_type_list: parameter_type_list "," typename • pass_dims

    "&"  shift, and go to state 250

    $default  reduce using rule 17 (dims)

    dims       go to state 130
    pass_dims  go to state 251


State 199

   77 parameter_list: parameter_list "," typename • pass_variabledef

    "id"  shift, and go to state 127
    "&"   shift, and go to state 178

    variabledef       go to state 131
    pass_variabledef  go to state 252


State 200

  104 general_expression: general_expression • "," general_expression
  132 if_statement: "if" "(" general_expression • ")" statement if_tail

    ")"  shift, and go to state 253
    ","  shift, and go to state 165


State 201

  104 general_expression: general_expression • "," general_expression
  135 while_statement: "while" "(" general_expression • ")" statement

    ")"  shift, and go to state 254
    ","  shift, and go to state 165


State 202

  136 for_statement: "for" "(" optexpr • ";" optexpr ";" optexpr ")" statement

    ";"  shift, and go to state 255


State 203

  104 general_expression: general_expression • "," general_expression
  139 switch_statement: "switch" "(" general_expression • ")" switch_tail

    ")"  shift, and go to state 256
    ","  shift, and go to state 165


State 204

  111 variable: decltype "id" •

    $default  reduce using rule 111 (variable)


State 205

  153 return_statement: "return" optexpr ";" •

    $default  reduce using rule 153 (return_statement)


State 206

  109 variable: variable • "[" general_expression "]"
  110         | variable • "." "id"
  160 in_item: variable •

    "."  shift, and go to state 168
    "["  shift, and go to state 170

    $default  reduce using rule 160 (in_item)


State 207

  154 io_statement: "cin" ">>" in_list • ";"

    ";"  shift, and go to state 257


State 208

  156 in_list: in_item • ">>" in_list
  157        | in_item •

    ">>"  shift, and go to state 258

    $default  reduce using rule 157 (in_list)


State 209

  162 out_item: "string" •

    $default  reduce using rule 162 (out_item)


State 210

  104 general_expression: general_expression • "," general_expression
  161 out_item: general_expression •

    ","  shift, and go to state 165

    $default  reduce using rule 161 (out_item)


State 211

  155 io_statement: "cout" "<<" out_list • ";"

    ";"  shift, and go to state 259


State 212

  158 out_list: out_item • "<<" out_list
  159         | out_item •

    "<<"  shift, and go to state 260

    $default  reduce using rule 159 (out_list)


State 213

  104 general_expression: general_expression • "," general_expression
  126 expression: "length" "(" general_expression • ")"

    ")"  shift, and go to state 261
    ","  shift, and go to state 165


State 214

  129 expression: "(" standard_type ")" •

    $default  reduce using rule 129 (expression)


State 215

  128 expression: "(" general_expression ")" •

    $default  reduce using rule 128 (expression)


State 216

  163 comp_statement: "{" decl_statements "}" •

    $default  reduce using rule 163 (comp_statement)


State 217

   86 declarations: declarations decltype typename • variabledefs ";"

    "id"  shift, and go to state 127

    variabledefs  go to state 262
    variabledef   go to state 219


State 218

   34 variabledefs: variabledefs • "," variabledef
   87 declarations: decltype typename variabledefs • ";"

    ";"  shift, and go to state 263
    ","  shift, and go to state 264


State 219

   35 variabledefs: variabledef •

    $default  reduce using rule 35 (variabledefs)


State 220

  104 general_expression: general_expression • "," general_expression
  104                   | general_expression "," general_expression •

    $default  reduce using rule 104 (general_expression)


State 221

  104 general_expression: general_expression • "," general_expression
  130 expression_list: general_expression •

    ","  shift, and go to state 165

    $default  reduce using rule 130 (expression_list)


State 222

  125 expression: variable "(" expression_list • ")"

    ")"  shift, and go to state 265


State 223

  110 variable: variable "." "id" •

    $default  reduce using rule 110 (variable)


State 224

  107 assignment: variable "=" "string" •

    $default  reduce using rule 107 (assignment)


State 225

  106 assignment: variable "=" assignment •

    $default  reduce using rule 106 (assignment)


State 226

  104 general_expression: general_expression • "," general_expression
  109 variable: variable "[" general_expression • "]"

    ","  shift, and go to state 165
    "]"  shift, and go to state 266


State 227

  113 expression: expression • "||" expression
  113           | expression "||" expression •
  114           | expression • "&&" expression
  115           | expression • "== !=" expression
  116           | expression • "< >= < <=" expression
  117           | expression • "+ -" expression
  118           | expression • "* / %" expression

    "&&"         shift, and go to state 172
    "== !="      shift, and go to state 173
    "< >= < <="  shift, and go to state 174
    "+ -"        shift, and go to state 175
    "* / %"      shift, and go to state 176

    $default  reduce using rule 113 (expression)


State 228

  113 expression: expression • "||" expression
  114           | expression • "&&" expression
  114           | expression "&&" expression •
  115           | expression • "== !=" expression
  116           | expression • "< >= < <=" expression
  117           | expression • "+ -" expression
  118           | expression • "* / %" expression

    "== !="      shift, and go to state 173
    "< >= < <="  shift, and go to state 174
    "+ -"        shift, and go to state 175
    "* / %"      shift, and go to state 176

    $default  reduce using rule 114 (expression)


State 229

  113 expression: expression • "||" expression
  114           | expression • "&&" expression
  115           | expression • "== !=" expression
  115           | expression "== !=" expression •
  116           | expression • "< >= < <=" expression
  117           | expression • "+ -" expression
  118           | expression • "* / %" expression

    "< >= < <="  shift, and go to state 174
    "+ -"        shift, and go to state 175
    "* / %"      shift, and go to state 176

    $default  reduce using rule 115 (expression)


State 230

  113 expression: expression • "||" expression
  114           | expression • "&&" expression
  115           | expression • "== !=" expression
  116           | expression • "< >= < <=" expression
  116           | expression "< >= < <=" expression •
  117           | expression • "+ -" expression
  118           | expression • "* / %" expression

    "+ -"    shift, and go to state 175
    "* / %"  shift, and go to state 176

    $default  reduce using rule 116 (expression)


State 231

  113 expression: expression • "||" expression
  114           | expression • "&&" expression
  115           | expression • "== !=" expression
  116           | expression • "< >= < <=" expression
  117           | expression • "+ -" expression
  117           | expression "+ -" expression •
  118           | expression • "* / %" expression

    "* / %"  shift, and go to state 176

    $default  reduce using rule 117 (expression)


State 232

  113 expression: expression • "||" expression
  114           | expression • "&&" expression
  115           | expression • "== !=" expression
  116           | expression • "< >= < <=" expression
  117           | expression • "+ -" expression
  118           | expression • "* / %" expression
  118           | expression "* / %" expression •

    $default  reduce using rule 118 (expression)


State 233

   49 id_list: id_list "," "id" • initializer

    "="  shift, and go to state 57

    $default  reduce using rule 56 (initializer)

    initializer  go to state 267


State 234

   26 access: "private" ":" •

    $default  reduce using rule 26 (access)


State 235

   27 access: "protected" ":" •

    $default  reduce using rule 27 (access)


State 236

   28 access: "public" ":" •

    $default  reduce using rule 28 (access)


State 237

   21 class_body: parent "{" members_methods "}" •

    $default  reduce using rule 21 (class_body)


State 238

   24 members_methods: members_methods access • member_or_method

    "char"   shift, and go to state 5
    "int"    shift, and go to state 30
    "float"  shift, and go to state 7
    "void"   shift, and go to state 10
    "id"     shift, and go to state 11

    typename                go to state 239
    standard_type           go to state 15
    member_or_method        go to state 268
    member                  go to state 241
    var_declaration         go to state 242
    method                  go to state 243
    short_func_declaration  go to state 244
    short_par_func_header   go to state 18
    func_header_start       go to state 245
    nopar_func_header       go to state 246


State 239

   33 var_declaration: typename • variabledefs ";"
   41 func_header_start: typename • "id"

    "id"  shift, and go to state 269

    variabledefs  go to state 270
    variabledef   go to state 219


State 240

   25 members_methods: access member_or_method •

    $default  reduce using rule 25 (members_methods)


State 241

   30 member_or_method: member •

    $default  reduce using rule 30 (member_or_method)


State 242

   32 member: var_declaration •

    $default  reduce using rule 32 (member)


State 243

   31 member_or_method: method •

    $default  reduce using rule 31 (member_or_method)


State 244

   37 method: short_func_declaration •

    $default  reduce using rule 37 (method)


State 245

   40 short_par_func_header: func_header_start • "(" parameter_type_list ")"
   46 nopar_func_header: func_header_start • "(" ")"

    "("  shift, and go to state 271


State 246

   39 short_func_declaration: nopar_func_header • ";"

    ";"  shift, and go to state 42


State 247

   18 dim: "[" "int const" "]" •

    $default  reduce using rule 18 (dim)


State 248

   66 init_values: init_values "," • init_value

    "+ -"     shift, and go to state 122
    "string"  shift, and go to state 123
    "{"       shift, and go to state 124

    $default  reduce using rule 62 (sign)

    init_value  go to state 272
    sign        go to state 126


State 249

   59 init_value: "{" init_values "}" •

    $default  reduce using rule 59 (init_value)


State 250

   45 pass_dims: "&" •

    $default  reduce using rule 45 (pass_dims)


State 251

   42 parameter_type_list: parameter_type_list "," typename pass_dims •

    $default  reduce using rule 42 (parameter_type_list)


State 252

   77 parameter_list: parameter_list "," typename pass_variabledef •

    $default  reduce using rule 77 (parameter_list)


State 253

  132 if_statement: "if" "(" general_expression ")" • statement if_tail

    "static"        shift, and go to state 66
    "continue"      shift, and go to state 67
    "break"         shift, and go to state 68
    "this"          shift, and go to state 69
    "if"            shift, and go to state 70
    "while"         shift, and go to state 71
    "for"           shift, and go to state 72
    "switch"        shift, and go to state 73
    "return"        shift, and go to state 74
    "cin"           shift, and go to state 75
    "cout"          shift, and go to state 76
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85
    ";"             shift, and go to state 86
    "{"             shift, and go to state 87

    $default  reduce using rule 89 (decltype)

    constant              go to state 88
    decltype              go to state 144
    statement             go to state 273
    expression_statement  go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    variable              go to state 97
    expression            go to state 98
    if_statement          go to state 99
    while_statement       go to state 100
    for_statement         go to state 101
    switch_statement      go to state 102
    return_statement      go to state 103
    io_statement          go to state 104
    comp_statement        go to state 105


State 254

  135 while_statement: "while" "(" general_expression ")" • statement

    "static"        shift, and go to state 66
    "continue"      shift, and go to state 67
    "break"         shift, and go to state 68
    "this"          shift, and go to state 69
    "if"            shift, and go to state 70
    "while"         shift, and go to state 71
    "for"           shift, and go to state 72
    "switch"        shift, and go to state 73
    "return"        shift, and go to state 74
    "cin"           shift, and go to state 75
    "cout"          shift, and go to state 76
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85
    ";"             shift, and go to state 86
    "{"             shift, and go to state 87

    $default  reduce using rule 89 (decltype)

    constant              go to state 88
    decltype              go to state 144
    statement             go to state 274
    expression_statement  go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    variable              go to state 97
    expression            go to state 98
    if_statement          go to state 99
    while_statement       go to state 100
    for_statement         go to state 101
    switch_statement      go to state 102
    return_statement      go to state 103
    io_statement          go to state 104
    comp_statement        go to state 105


State 255

  136 for_statement: "for" "(" optexpr ";" • optexpr ";" optexpr ")" statement

    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85

    ";"       reduce using rule 138 (optexpr)
    $default  reduce using rule 89 (decltype)

    constant            go to state 88
    decltype            go to state 144
    general_expression  go to state 145
    assignment          go to state 96
    variable            go to state 97
    expression          go to state 98
    optexpr             go to state 275


State 256

  139 switch_statement: "switch" "(" general_expression ")" • switch_tail

    "case"  shift, and go to state 276
    "{"     shift, and go to state 277

    switch_tail           go to state 278
    single_casestatement  go to state 279


State 257

  154 io_statement: "cin" ">>" in_list ";" •

    $default  reduce using rule 154 (io_statement)


State 258

  156 in_list: in_item ">>" • in_list

    "static"  shift, and go to state 66
    "this"    shift, and go to state 69

    $default  reduce using rule 89 (decltype)

    decltype  go to state 144
    variable  go to state 206
    in_list   go to state 280
    in_item   go to state 208


State 259

  155 io_statement: "cout" "<<" out_list ";" •

    $default  reduce using rule 155 (io_statement)


State 260

  158 out_list: out_item "<<" • out_list

    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "string"        shift, and go to state 209
    "("             shift, and go to state 85

    $default  reduce using rule 89 (decltype)

    constant            go to state 88
    decltype            go to state 144
    general_expression  go to state 210
    assignment          go to state 96
    variable            go to state 97
    expression          go to state 98
    out_list            go to state 281
    out_item            go to state 212


State 261

  126 expression: "length" "(" general_expression ")" •

    $default  reduce using rule 126 (expression)


State 262

   34 variabledefs: variabledefs • "," variabledef
   86 declarations: declarations decltype typename variabledefs • ";"

    ";"  shift, and go to state 282
    ","  shift, and go to state 264


State 263

   87 declarations: decltype typename variabledefs ";" •

    $default  reduce using rule 87 (declarations)


State 264

   34 variabledefs: variabledefs "," • variabledef

    "id"  shift, and go to state 127

    variabledef  go to state 283


State 265

  125 expression: variable "(" expression_list ")" •

    $default  reduce using rule 125 (expression)


State 266

  109 variable: variable "[" general_expression "]" •

    $default  reduce using rule 109 (variable)


State 267

   49 id_list: id_list "," "id" initializer •

    $default  reduce using rule 49 (id_list)


State 268

   24 members_methods: members_methods access member_or_method •

    $default  reduce using rule 24 (members_methods)


State 269

   36 variabledef: "id" • dims
   41 func_header_start: typename "id" •

    "("       reduce using rule 41 (func_header_start)
    $default  reduce using rule 17 (dims)

    dims  go to state 56


State 270

   33 var_declaration: typename variabledefs • ";"
   34 variabledefs: variabledefs • "," variabledef

    ";"  shift, and go to state 284
    ","  shift, and go to state 264


State 271

   40 short_par_func_header: func_header_start "(" • parameter_type_list ")"
   46 nopar_func_header: func_header_start "(" • ")"

    "char"   shift, and go to state 5
    "int"    shift, and go to state 30
    "float"  shift, and go to state 7
    "void"   shift, and go to state 10
    "id"     shift, and go to state 11
    ")"      shift, and go to state 62

    typename             go to state 285
    standard_type        go to state 15
    parameter_type_list  go to state 64


State 272

   66 init_values: init_values "," init_value •

    $default  reduce using rule 66 (init_values)


State 273

  132 if_statement: "if" "(" general_expression ")" statement • if_tail

    "else"  shift, and go to state 286

    $default  reduce using rule 134 (if_tail)

    if_tail  go to state 287


State 274

  135 while_statement: "while" "(" general_expression ")" statement •

    $default  reduce using rule 135 (while_statement)


State 275

  136 for_statement: "for" "(" optexpr ";" optexpr • ";" optexpr ")" statement

    ";"  shift, and go to state 288


State 276

  151 single_casestatement: "case" • constant ":" single_casestatement
  152                     | "case" • constant ":" statement

    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80

    constant  go to state 289


State 277

  140 switch_tail: "{" • decl_cases "}"

    "static"   shift, and go to state 66
    "case"     shift, and go to state 290
    "default"  shift, and go to state 291

    "}"       reduce using rule 145 (decl_cases)
    $default  reduce using rule 89 (decltype)

    declarations    go to state 292
    decltype        go to state 293
    decl_cases      go to state 294
    casestatements  go to state 295
    casestatement   go to state 296


State 278

  139 switch_statement: "switch" "(" general_expression ")" switch_tail •

    $default  reduce using rule 139 (switch_statement)


State 279

  141 switch_tail: single_casestatement •

    $default  reduce using rule 141 (switch_tail)


State 280

  156 in_list: in_item ">>" in_list •

    $default  reduce using rule 156 (in_list)


State 281

  158 out_list: out_item "<<" out_list •

    $default  reduce using rule 158 (out_list)


State 282

   86 declarations: declarations decltype typename variabledefs ";" •

    $default  reduce using rule 86 (declarations)


State 283

   34 variabledefs: variabledefs "," variabledef •

    $default  reduce using rule 34 (variabledefs)


State 284

   33 var_declaration: typename variabledefs ";" •

    $default  reduce using rule 33 (var_declaration)


State 285

   43 parameter_type_list: typename • pass_dims

    "&"  shift, and go to state 250

    $default  reduce using rule 17 (dims)

    dims       go to state 130
    pass_dims  go to state 132


State 286

  133 if_tail: "else" • statement

    "static"        shift, and go to state 66
    "continue"      shift, and go to state 67
    "break"         shift, and go to state 68
    "this"          shift, and go to state 69
    "if"            shift, and go to state 70
    "while"         shift, and go to state 71
    "for"           shift, and go to state 72
    "switch"        shift, and go to state 73
    "return"        shift, and go to state 74
    "cin"           shift, and go to state 75
    "cout"          shift, and go to state 76
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85
    ";"             shift, and go to state 86
    "{"             shift, and go to state 87

    $default  reduce using rule 89 (decltype)

    constant              go to state 88
    decltype              go to state 144
    statement             go to state 297
    expression_statement  go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    variable              go to state 97
    expression            go to state 98
    if_statement          go to state 99
    while_statement       go to state 100
    for_statement         go to state 101
    switch_statement      go to state 102
    return_statement      go to state 103
    io_statement          go to state 104
    comp_statement        go to state 105


State 287

  132 if_statement: "if" "(" general_expression ")" statement if_tail •

    $default  reduce using rule 132 (if_statement)


State 288

  136 for_statement: "for" "(" optexpr ";" optexpr ";" • optexpr ")" statement

    "static"        shift, and go to state 66
    "this"          shift, and go to state 69
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85

    ")"       reduce using rule 138 (optexpr)
    $default  reduce using rule 89 (decltype)

    constant            go to state 88
    decltype            go to state 144
    general_expression  go to state 145
    assignment          go to state 96
    variable            go to state 97
    expression          go to state 98
    optexpr             go to state 298


State 289

  151 single_casestatement: "case" constant • ":" single_casestatement
  152                     | "case" constant • ":" statement

    ":"  shift, and go to state 299


State 290

  148 casestatement: "case" • constant ":" casestatement
  149              | "case" • constant ":" statements

    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80

    constant  go to state 300


State 291

  150 casestatement: "default" • ":" statements

    ":"  shift, and go to state 301


State 292

   86 declarations: declarations • decltype typename variabledefs ";"
  142 decl_cases: declarations • casestatements
  143           | declarations •

    "static"   shift, and go to state 66
    "case"     shift, and go to state 290
    "default"  shift, and go to state 291

    "}"       reduce using rule 143 (decl_cases)
    $default  reduce using rule 89 (decltype)

    decltype        go to state 302
    casestatements  go to state 303
    casestatement   go to state 296


State 293

   87 declarations: decltype • typename variabledefs ";"

    "char"   shift, and go to state 5
    "int"    shift, and go to state 30
    "float"  shift, and go to state 7
    "void"   shift, and go to state 10
    "id"     shift, and go to state 11

    typename       go to state 162
    standard_type  go to state 15


State 294

  140 switch_tail: "{" decl_cases • "}"

    "}"  shift, and go to state 304


State 295

  144 decl_cases: casestatements •
  146 casestatements: casestatements • casestatement

    "case"     shift, and go to state 290
    "default"  shift, and go to state 291

    $default  reduce using rule 144 (decl_cases)

    casestatement  go to state 305


State 296

  147 casestatements: casestatement •

    $default  reduce using rule 147 (casestatements)


State 297

  133 if_tail: "else" statement •

    $default  reduce using rule 133 (if_tail)


State 298

  136 for_statement: "for" "(" optexpr ";" optexpr ";" optexpr • ")" statement

    ")"  shift, and go to state 306


State 299

  151 single_casestatement: "case" constant ":" • single_casestatement
  152                     | "case" constant ":" • statement

    "static"        shift, and go to state 66
    "continue"      shift, and go to state 67
    "break"         shift, and go to state 68
    "this"          shift, and go to state 69
    "if"            shift, and go to state 70
    "while"         shift, and go to state 71
    "for"           shift, and go to state 72
    "switch"        shift, and go to state 73
    "case"          shift, and go to state 276
    "return"        shift, and go to state 74
    "cin"           shift, and go to state 75
    "cout"          shift, and go to state 76
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85
    ";"             shift, and go to state 86
    "{"             shift, and go to state 87

    $default  reduce using rule 89 (decltype)

    constant              go to state 88
    decltype              go to state 144
    statement             go to state 307
    expression_statement  go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    variable              go to state 97
    expression            go to state 98
    if_statement          go to state 99
    while_statement       go to state 100
    for_statement         go to state 101
    switch_statement      go to state 102
    single_casestatement  go to state 308
    return_statement      go to state 103
    io_statement          go to state 104
    comp_statement        go to state 105


State 300

  148 casestatement: "case" constant • ":" casestatement
  149              | "case" constant • ":" statements

    ":"  shift, and go to state 309


State 301

  150 casestatement: "default" ":" • statements

    "static"        shift, and go to state 66
    "continue"      shift, and go to state 67
    "break"         shift, and go to state 68
    "this"          shift, and go to state 69
    "if"            shift, and go to state 70
    "while"         shift, and go to state 71
    "for"           shift, and go to state 72
    "switch"        shift, and go to state 73
    "return"        shift, and go to state 74
    "cin"           shift, and go to state 75
    "cout"          shift, and go to state 76
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85
    ";"             shift, and go to state 86
    "{"             shift, and go to state 87

    $default  reduce using rule 89 (decltype)

    constant              go to state 88
    decltype              go to state 144
    statements            go to state 310
    statement             go to state 93
    expression_statement  go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    variable              go to state 97
    expression            go to state 98
    if_statement          go to state 99
    while_statement       go to state 100
    for_statement         go to state 101
    switch_statement      go to state 102
    return_statement      go to state 103
    io_statement          go to state 104
    comp_statement        go to state 105


State 302

   86 declarations: declarations decltype • typename variabledefs ";"

    "char"   shift, and go to state 5
    "int"    shift, and go to state 30
    "float"  shift, and go to state 7
    "void"   shift, and go to state 10
    "id"     shift, and go to state 11

    typename       go to state 217
    standard_type  go to state 15


State 303

  142 decl_cases: declarations casestatements •
  146 casestatements: casestatements • casestatement

    "case"     shift, and go to state 290
    "default"  shift, and go to state 291

    $default  reduce using rule 142 (decl_cases)

    casestatement  go to state 305


State 304

  140 switch_tail: "{" decl_cases "}" •

    $default  reduce using rule 140 (switch_tail)


State 305

  146 casestatements: casestatements casestatement •

    $default  reduce using rule 146 (casestatements)


State 306

  136 for_statement: "for" "(" optexpr ";" optexpr ";" optexpr ")" • statement

    "static"        shift, and go to state 66
    "continue"      shift, and go to state 67
    "break"         shift, and go to state 68
    "this"          shift, and go to state 69
    "if"            shift, and go to state 70
    "while"         shift, and go to state 71
    "for"           shift, and go to state 72
    "switch"        shift, and go to state 73
    "return"        shift, and go to state 74
    "cin"           shift, and go to state 75
    "cout"          shift, and go to state 76
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85
    ";"             shift, and go to state 86
    "{"             shift, and go to state 87

    $default  reduce using rule 89 (decltype)

    constant              go to state 88
    decltype              go to state 144
    statement             go to state 311
    expression_statement  go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    variable              go to state 97
    expression            go to state 98
    if_statement          go to state 99
    while_statement       go to state 100
    for_statement         go to state 101
    switch_statement      go to state 102
    return_statement      go to state 103
    io_statement          go to state 104
    comp_statement        go to state 105


State 307

  152 single_casestatement: "case" constant ":" statement •

    $default  reduce using rule 152 (single_casestatement)


State 308

  151 single_casestatement: "case" constant ":" single_casestatement •

    $default  reduce using rule 151 (single_casestatement)


State 309

  148 casestatement: "case" constant ":" • casestatement
  149              | "case" constant ":" • statements

    "static"        shift, and go to state 66
    "continue"      shift, and go to state 67
    "break"         shift, and go to state 68
    "this"          shift, and go to state 69
    "if"            shift, and go to state 70
    "while"         shift, and go to state 71
    "for"           shift, and go to state 72
    "switch"        shift, and go to state 73
    "case"          shift, and go to state 290
    "default"       shift, and go to state 291
    "return"        shift, and go to state 74
    "cin"           shift, and go to state 75
    "cout"          shift, and go to state 76
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85
    ";"             shift, and go to state 86
    "{"             shift, and go to state 87

    $default  reduce using rule 89 (decltype)

    constant              go to state 88
    decltype              go to state 144
    statements            go to state 312
    statement             go to state 93
    expression_statement  go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    variable              go to state 97
    expression            go to state 98
    if_statement          go to state 99
    while_statement       go to state 100
    for_statement         go to state 101
    switch_statement      go to state 102
    casestatement         go to state 313
    return_statement      go to state 103
    io_statement          go to state 104
    comp_statement        go to state 105


State 310

   90 statements: statements • statement
  150 casestatement: "default" ":" statements •

    "static"        shift, and go to state 66
    "continue"      shift, and go to state 67
    "break"         shift, and go to state 68
    "this"          shift, and go to state 69
    "if"            shift, and go to state 70
    "while"         shift, and go to state 71
    "for"           shift, and go to state 72
    "switch"        shift, and go to state 73
    "return"        shift, and go to state 74
    "cin"           shift, and go to state 75
    "cout"          shift, and go to state 76
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85
    ";"             shift, and go to state 86
    "{"             shift, and go to state 87

    "id"      reduce using rule 89 (decltype)
    $default  reduce using rule 150 (casestatement)

    constant              go to state 88
    decltype              go to state 144
    statement             go to state 163
    expression_statement  go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    variable              go to state 97
    expression            go to state 98
    if_statement          go to state 99
    while_statement       go to state 100
    for_statement         go to state 101
    switch_statement      go to state 102
    return_statement      go to state 103
    io_statement          go to state 104
    comp_statement        go to state 105


State 311

  136 for_statement: "for" "(" optexpr ";" optexpr ";" optexpr ")" statement •

    $default  reduce using rule 136 (for_statement)


State 312

   90 statements: statements • statement
  149 casestatement: "case" constant ":" statements •

    "static"        shift, and go to state 66
    "continue"      shift, and go to state 67
    "break"         shift, and go to state 68
    "this"          shift, and go to state 69
    "if"            shift, and go to state 70
    "while"         shift, and go to state 71
    "for"           shift, and go to state 72
    "switch"        shift, and go to state 73
    "return"        shift, and go to state 74
    "cin"           shift, and go to state 75
    "cout"          shift, and go to state 76
    "length"        shift, and go to state 77
    "int const"     shift, and go to state 78
    "double const"  shift, and go to state 79
    "char const"    shift, and go to state 80
    "+ -"           shift, and go to state 81
    "!"             shift, and go to state 82
    "++ --"         shift, and go to state 83
    "SIZEOF"        shift, and go to state 84
    "("             shift, and go to state 85
    ";"             shift, and go to state 86
    "{"             shift, and go to state 87

    "id"      reduce using rule 89 (decltype)
    $default  reduce using rule 149 (casestatement)

    constant              go to state 88
    decltype              go to state 144
    statement             go to state 163
    expression_statement  go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    variable              go to state 97
    expression            go to state 98
    if_statement          go to state 99
    while_statement       go to state 100
    for_statement         go to state 101
    switch_statement      go to state 102
    return_statement      go to state 103
    io_statement          go to state 104
    comp_statement        go to state 105


State 313

  148 casestatement: "case" constant ":" casestatement •

    $default  reduce using rule 148 (casestatement)
